{"version":3,"sources":["data/geodata lazy /^/.//.*/.json$/ groupOptions: {} namespace object","components/Header/index.tsx","components/Footer/index.tsx","pages/Layouts/Default/index.tsx","components/Html/Button/index.tsx","components/Html/Checkbox/index.tsx","components/Html/Select/index.tsx","components/Html/Table/index.tsx","components/GoogleMaps/index.tsx","components/LeafletMaps/index.tsx","components/Pagination/index.tsx","services/google.spreadsheets.ts","repositories/Producer/index.ts","repositories/Product/index.ts","repositories/Highlighter/index.ts","components/FormSearch/index.tsx","pages/Home/index.tsx","routes.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","Header","className","style","background","process","Footer","Default","children","uk-height-viewport","Button","label","type","rest","fontSize","fontWeight","Checkbox","name","checked","onChange","display","verticalAlign","height","lineHeight","width","Select","placeholder","isMultiple","value","options","isMulti","theme","colors","primary25","borderRadius","Table","data","useState","produtos","products","marginBottom","nome","proprietario","irrigacao","cultivo_protegido","veiculos","comercializacao","join","product","index","key","year","jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez","total","React","memo","producers","highlighters","lat","Number","lng","coordinates","properties","description","geometry","geoJSONOfTheMunicipality","setGeoJSONOfTheMunicipality","useEffect","a","municipality","features","console","dir","geojson2","load","onLoad","googleMapsApiKey","mapContainerStyle","center","zoom","coordArr","Array","coordinate","push","path","strokeColor","strokeOpacity","strokeWeight","renderGeoJSONOfTheMunicipality","highlighter","title","position","producer","latitude","longitude","LeafletMaps","opacity","TileLayer","attribution","url","Marker","Popup","Tooltip","Pagination","itemsOnPage","onPaginationChange","links","alignment","counter","setCounter","Math","ceil","numberOfLinks","onButtonClick","log","data-uk-pagination","onClick","uk-icon","fill","el","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","credentials","private_key","getAll","loadInfo","sheet","sheetsByIndex","getRows","rows","itens","ID","DataAtualização","Tipo","Nome","Proprietário","InscriçãoEstadual","Empregados","AreaTotal","AreaDeHorta","AreaDePomar","Irrigação","CultivoProtegido","Veiculos","Comercialização","Latitude","Longitude","data_atualizacao","tipo","inscricao_estadual","empregados","area_total","area_de_horta","area_de_pomar","replaceAll","split","parseFloat","Produtor","Produto","Ano","Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro","producerId","months","month","Total","Descrição","icon","FormSearch","structures","setStructures","setMonths","livestocks","setLivestocks","productions","setProductions","commercializations","setCommercializations","coveredPlanting","setCoveredPlanting","irrigated","setIrrigated","dbProducers","setDbProducers","dbProducts","setDbProducts","dbHighlighter","setDbHighlighter","setProducers","setHighlighters","start","end","pagination","setPagination","loadDataSpreadsheetsFromGoogle","productRepository","response","sessionStorage","setItem","JSON","stringify","catch","error","finally","producerRepository","highlighterRepository","lastUpdate","getItem","Date","dateFromStorage","parse","toISOString","clear","useCallback","newProducers","filter","handleClearSearchForm","handleSubmitSearchForm","producersWithProducts","length","filterCommercializations","item","filterLivestocks","filterProductions","filterMonths","filterStructures","producersWithProductionFilter","newProducts","includes","indexOf","producersWithLivestockFilter","producersLivestockAndProduction","concat","highlightersWithStructureFilter","productsWithMonthFilter","production","onSubmit","event","preventDefault","uk-grid","geographic_structure","selectedOption","selected","livestock","commercialization","target","to","slice","Home","Routes","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a2acd74.chunk.js","sourcesContent":["var map = {\n\t\"./5003900.json\": [\n\t\t390,\n\t\t3\n\t],\n\t\"./5210109.json\": [\n\t\t391,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 216;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\n\nfunction Header() {\n  return (\n    <section\n      className=\"uk-section uk-section-small uk-section-primary\"\n      style={{ background: \"#305183\" }}\n    >\n      <div className=\"uk-container\">\n        <h2 className=\"uk-margin-remove uk-text-bold\">\n          Mapa de {process.env.REACT_APP_CITY_NAME}\n        </h2>\n      </div>\n    </section>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  return <></>;\n}\n\nexport default Footer;\n","import React from \"react\";\n\n// Components\nimport Header from \"../../../components/Header\";\nimport Footer from \"../../../components/Footer\";\n\ninterface LayoutProps {\n  children: React.ReactNode\n}\n\nconst Default: React.FC<LayoutProps> = ({ children }) => {\n  return (\n    <div className=\"uk-offcanvas-content\">\n      <div uk-height-viewport=\"expand: true\">\n        <Header />\n\n        {children}\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Default;\n","import React, { ButtonHTMLAttributes } from \"react\";\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  label: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({ label, type, ...rest }) => {\n  return (\n    <button\n      type={type}\n      className=\"uk-button uk-button-primary uk-button-large uk-width-expand\"\n      {...rest}\n      style={{\n        fontSize: \"20px\",\n        fontWeight: \"bold\",\n      }}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport { Button };\n","import React, { InputHTMLAttributes } from \"react\";\n\ninterface CheckboxProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  label: string;\n  checked: boolean;\n}\n\nconst Checkbox: React.FC<CheckboxProps> = ({\n  name,\n  label,\n  checked,\n  onChange,\n}) => {\n  return (\n    <label\n      style={{\n        display: \"block\",\n        verticalAlign: \"top\",\n        height: \"38px\",\n        lineHeight: \"38px\",\n        fontSize: \"20px\",\n        fontWeight: \"bold\",\n      }}\n    >\n      <input\n        id={name}\n        name={name}\n        className=\"uk-checkbox\"\n        type=\"checkbox\"\n        checked={checked}\n        onChange={onChange}\n        style={{\n          width: \"38px\",\n          height: \"38px\",\n          // margin: \"0 auto\",\n          verticalAlign: \"bottom\",\n        }}\n      />{\" \"}\n      {label}\n    </label>\n  );\n};\n\nexport { Checkbox };\n","import React from \"react\";\nimport ReactSelect, { Props, Theme } from \"react-select\";\n\nconst Select: React.FC<Props> = ({\n  name,\n  placeholder,\n  isMultiple,\n  value,\n  options,\n  onChange,\n}) => {\n  function customTheme(theme: Theme): Theme {\n    return {\n      ...theme,\n      colors: {\n        ...theme.colors,\n        primary25: \"#D3D3D3\",\n      },\n      borderRadius: 0,\n    };\n  }\n\n  return (\n    <div className=\"uk-form-controls\">\n      <ReactSelect\n        id={name}\n        name={name}\n        placeholder={placeholder}\n        isMulti={isMultiple}\n        value={value}\n        options={options}\n        onChange={onChange}\n        theme={customTheme}\n        // className=\"basic-multi-select\"\n        // classNamePrefix=\"select\"\n      />\n    </div>\n  );\n};\n\nexport { Select };\n","import React, { useState } from \"react\";\n\n// Repositories\nimport { ProductionOfTheMonth } from \"../../../repositories/Product\";\n\n// Props\nexport interface TableProps {\n  data: {\n    id: number;\n    nome: string;\n    proprietario: string;\n    irrigacao: boolean;\n    cultivo_protegido: boolean;\n    veiculos: number;\n    comercializacao: string[];\n    produtos: {\n      name: string;\n      year: number;\n      months: ProductionOfTheMonth[];\n      jan: number;\n      fev: number;\n      mar: number;\n      abr: number;\n      mai: number;\n      jun: number;\n      jul: number;\n      ago: number;\n      set: number;\n      out: number;\n      nov: number;\n      dez: number;\n      total: number;\n    }[];\n  };\n}\n\nconst Table: React.FC<TableProps> = ({ data }) => {\n  const [products] = useState(data.produtos);\n\n  return (\n    <div className=\"uk-card uk-card-default\" style={{ marginBottom: \"25px\" }}>\n      <div className=\"uk-card-header\">\n        <h3 className=\"uk-card-title\">\n          {data.id} - {data.nome}\n        </h3>\n        <p>\n          <strong>Proprietário(a):</strong> {data.proprietario} /{\" \"}\n          <strong>Irrigado:</strong> {data.irrigacao === true ? \"Sim\" : \"Não\"} /{\" \"}\n          <strong>Cultivo protegido:</strong>{\" \"}\n          {data.cultivo_protegido === true ? \"Sim\" : \"Não\"} /{\" \"}\n          <strong>Veiculos:</strong> {data.veiculos} /{\" \"}\n          <strong>Comercialização:</strong> {data.comercializacao.join(\", \")}\n        </p>\n      </div>\n      <div className=\"uk-card-body\">\n        <div className=\"uk-overflow-auto\">\n          <table\n            className=\"uk-table uk-table-divider uk-table-small\"\n            id=\"datatable\"\n          >\n            <thead>\n              <tr>\n                <th>Produto</th>\n                <th>Ano</th>\n                <th>Jan</th>\n                <th>Fev</th>\n                <th>Mar</th>\n                <th>Abr</th>\n                <th>Mai</th>\n                <th>Jun</th>\n                <th>Jul</th>\n                <th>Ago</th>\n                <th>Set</th>\n                <th>Out</th>\n                <th>Nov</th>\n                <th>Dez</th>\n                <th>Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products &&\n                products.map((product, index) => (\n                  <tr key={index}>\n                    <td>{product.name}</td>\n                    <td>{product.year}</td>\n                    <td>{product.jan}</td>\n                    <td>{product.fev}</td>\n                    <td>{product.mar}</td>\n                    <td>{product.abr}</td>\n                    <td>{product.mai}</td>\n                    <td>{product.jun}</td>\n                    <td>{product.jul}</td>\n                    <td>{product.ago}</td>\n                    <td>{product.set}</td>\n                    <td>{product.out}</td>\n                    <td>{product.nov}</td>\n                    <td>{product.dez}</td>\n                    <td>{product.total}</td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Table };\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker, Polygon } from \"@react-google-maps/api\";\n\n// Components || Interfaces\nimport { Producer } from \"../../repositories/Producer\";\nimport { Highlighter } from \"../../repositories/Highlighter\";\nimport { Georeferencing } from \"../../repositories/Georeferencing\";\n\n// Data\n// import geojson from \"../../data/geodata/5003900.json\";\n\ninterface Props {\n  producers: Producer[];\n  highlighters: Highlighter[];\n}\ninterface LatLng {\n  lat: number;\n  lng: number;\n}\n\nconst Map: React.FC<Props> = ({ producers, highlighters }) => {\n  const [coordinates] = useState({\n    lat: Number(process.env.REACT_APP_CITY_LAT),\n    lng: Number(process.env.REACT_APP_CITY_LNG),\n  });\n  const [geoJSONOfTheMunicipality, setGeoJSONOfTheMunicipality] = useState({\n    type: \"Feature\",\n    properties: {\n      id: \"\",\n      name: \"\",\n      description: \"\",\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [[]],\n    },\n  });\n\n  useEffect(() => {\n    const load = async () => {\n      const municipality = process.env.REACT_APP_CITY_MUNICIPALITY_CODE_AT_IBGE;\n      const geojson2 = await import(\n        `../../data/geodata/${municipality}.json`\n      ).then((data) => {\n        setGeoJSONOfTheMunicipality(data.features[0]);\n        console.dir(data.features[0]);\n      });\n\n      // setGeoJSONOfTheMunicipality(geojson2.default);\n\n      console.dir({\n        municipality,\n        // geojson,\n        geojson2,\n      });\n    };\n\n    load();\n  }, []);\n\n  const renderGeoJSONOfTheMunicipality = () => {\n    // let coordinates = geoJSONOfTheMunicipality.features[0].geometry.coordinates[0];\n    const coordinates = geoJSONOfTheMunicipality.geometry.coordinates[0];\n    let coordArr = Array<LatLng>();\n    coordinates.map((coordinate: any) =>\n      coordArr.push({ lat: coordinate[1], lng: coordinate[0] })\n    );\n    return (\n      <Polygon\n        path={coordArr}\n        options={{\n          strokeColor: \"#fc1e0d\",\n          strokeOpacity: 1,\n          strokeWeight: 2,\n        }}\n      />\n    );\n  };\n\n  const renderRegions = () => {\n    let geo = sessionStorage.getItem(\"georeferencing\");\n    let geo2 = JSON.parse(geo ? geo : \"\");\n\n    geo2.map((region: Georeferencing) => {\n      let geo = region.coordinates\n        .replace(/\\\\n/g, \"\\\\n\")\n        .replace(/\\\\'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\\\\\"')\n        .replace(/\\\\&/g, \"\\\\&\")\n        .replace(/\\\\r/g, \"\\\\r\")\n        .replace(/\\\\t/g, \"\\\\t\")\n        .replace(/\\\\b/g, \"\\\\b\")\n        .replace(/\\\\f/g, \"\\\\f\");\n      let coordinates = JSON.parse(geo);\n      let coordArr = Array<LatLng>();\n      return console.log(geo);\n    });\n\n    let geo3 = geo2[0].coordinates\n      .replace(/\\\\n/g, \"\\\\n\")\n      .replace(/\\\\'/g, \"\\\\'\")\n      .replace(/\\\\\"/g, '\\\\\"')\n      .replace(/\\\\&/g, \"\\\\&\")\n      .replace(/\\\\r/g, \"\\\\r\")\n      .replace(/\\\\t/g, \"\\\\t\")\n      .replace(/\\\\b/g, \"\\\\b\")\n      .replace(/\\\\f/g, \"\\\\f\");\n\n    let geo4 = JSON.parse(geo3);\n\n    let coordinates = geo4;\n    let coordArr = Array<LatLng>();\n    coordinates.map((coordinate: LatLng) =>\n      coordArr.push({ lat: coordinate.lat, lng: coordinate.lng })\n    );\n\n    console.log(\"DEBUG: \", coordArr);\n\n    return (\n      <Polygon\n        path={coordArr}\n        options={{\n          strokeColor: \"#fc1e0d\",\n          strokeOpacity: 1,\n          strokeWeight: 2,\n        }}\n      />\n    );\n\n    // =========================================\n    // geoJSON.map((region: Georeferencing) => {\n    //   let coordinates = JSON.parse(region.coordinates);\n    //   let coordArr = Array<LatLng>();\n    //   coordinates.map((coordinate: LatLng) => coordArr.push({lat: coordinate.lat, lng: coordinate.lng}))\n\n    //   return (\n    //     <Polygon\n    //       path={coordArr}\n    //       options={{\n    //         strokeColor: \"#fc1e0d\",\n    //         strokeOpacity: 1,\n    //         strokeWeight: 2,\n    //       }}\n    //     />\n    //   );\n    // });\n    // console.log(coordinates);\n  };\n\n  const onLoad = (data: any) => {\n    // console.log(\"data: \", data);\n  };\n\n  return (\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_API_KEY}>\n      <GoogleMap\n        mapContainerStyle={{\n          width: \"100%\",\n          height: \"500px\",\n        }}\n        center={{\n          lat: coordinates.lat,\n          lng: coordinates.lng,\n        }}\n        zoom={9}\n      >\n        {renderGeoJSONOfTheMunicipality()}\n        {/* {renderRegions()} */}\n\n        {highlighters &&\n          highlighters.map((highlighter: Highlighter, key) => {\n            return (\n              <Marker\n                key={key}\n                title={highlighter.name}\n                onLoad={onLoad}\n                position={{\n                  lat: highlighter.lat,\n                  lng: highlighter.lng,\n                }}\n              />\n            );\n          })}\n\n        {producers.map((producer: Producer, key) => (\n          <Marker\n            key={key}\n            title={producer.nome}\n            onLoad={onLoad}\n            position={{ lat: producer.latitude, lng: producer.longitude }}\n          />\n        ))}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default React.memo(Map);\n","import React, { useEffect, useState } from \"react\";\n// import { Icon } from \"leaflet\";\nimport { Map, TileLayer, Marker, Popup, Tooltip } from \"react-leaflet\";\nimport { Producer } from \"../../repositories/Producer\";\nimport { Highlighter } from \"../../repositories/Highlighter\";\n// import \"leaflet/dist/leaflet.css\";\n\n// Data\n// import geojson from \"../../data/geojson.json\";\n\n// Icons SVG\n// import bridge from \"../../assets/icons/bridge.svg\";\n// import gate from \"../../assets/icons/gate.svg\";\n// import services from \"../../assets/icons/services.svg\";\n// import dais from \"../../assets/icons/dais.svg\";\n// import silo from \"../../assets/icons/silo.svg\";\n// import waterTank from \"../../assets/icons/water-tank.svg\";\n// import fish from \"../../assets/icons/fish.svg\";\n// import vegetable from \"../../assets/icons/vegetable.svg\";\n\ninterface Props {\n  producers: Producer[];\n  highlighters: Highlighter[];\n}\n\nconst LeafletMaps: React.FC<Props> = ({ producers, highlighters }) => {\n  const [coordinates] = useState({\n    lat: Number(process.env.REACT_APP_CITY_LAT),\n    lng: Number(process.env.REACT_APP_CITY_LNG),\n  });\n  // const [geoJSONOfTheMunicipality, setGeoJSONOfTheMunicipality] = useState(\n  //   geojson\n  // );\n  // const icons = [\n  //   new Icon({ iconUrl: bridge, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: services, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: dais, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: gate, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: silo, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: waterTank, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: fish, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: vegetable, iconSize: [40, 40] }),\n  // ];\n\n  useEffect(() => {\n    // console.log(coordinates);\n  }, [coordinates]);\n\n  return (\n    <Map\n      center={[coordinates.lat, coordinates.lng]}\n      zoom={10}\n      style={{ width: \"100%\", height: \"400px\", opacity: \"0.9\" }}\n    >\n      <TileLayer\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {/* <GeoJSON data={geojson.features} /> */}\n\n      {producers &&\n        producers.map((producer: Producer, key) => (\n          <Marker key={key} position={[producer.latitude, producer.longitude]}>\n            <Popup>{producer.nome}</Popup>\n            <Tooltip>Propriedade: {producer.nome}</Tooltip>\n          </Marker>\n        ))}\n\n      {highlighters &&\n        highlighters.map((highlighter: Highlighter, key) => (\n          <Marker key={key} position={[highlighter.lat, highlighter.lng]}>\n            <Popup>\n              <div>\n                <h2>{highlighter.name}</h2>\n                <p>{highlighter.description}</p>\n              </div>\n            </Popup>\n            <Tooltip>{highlighter.type}</Tooltip>\n          </Marker>\n        ))}\n    </Map>\n  );\n};\n\nexport default LeafletMaps;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\n\ninterface PaginationProps {\n  itemsOnPage: number;\n  onPaginationChange: (start: number, end: number) => void;\n  total: number;\n  links?: boolean;\n  alignment?: \"center\" | \"right\";\n}\n\nconst Pagination: React.FC<PaginationProps> = ({\n  itemsOnPage,\n  onPaginationChange,\n  total,\n  links = false,\n  alignment,\n}) => {\n  const [counter, setCounter] = useState(1);\n  const [numberOfLinks] = useState(Math.ceil(total / itemsOnPage));\n\n  useEffect(() => {\n    const value = itemsOnPage * counter;\n    onPaginationChange(value - itemsOnPage, value);\n  }, [counter]);\n\n  const onButtonClick = (type: string) => {\n    console.log(type);\n    if (type === \"prev\") {\n      if (counter === 1) {\n        setCounter(1);\n      } else {\n        setCounter(counter - 1);\n      }\n    } else if (type === \"next\") {\n      if (numberOfLinks === counter) {\n        setCounter(counter);\n      } else {\n        setCounter(counter + 1);\n      }\n    }\n\n    return false;\n  };\n\n  const setLinks = () => {\n    return new Array(numberOfLinks).fill(\"\").map((el, index) => (\n      <li\n        key={index}\n        className={`${index + 1 === counter ? \"uk-active\" : null}`}\n      >\n        <button\n          className=\"uk-button uk-button-default\"\n          onClick={() => setCounter(index + 1)}\n        >\n          {index + 1}\n        </button>\n      </li>\n    ));\n  };\n\n  return (\n    <ul\n      className={`uk-pagination ${alignment ? \"uk-flex-\" + alignment : null}`}\n      data-uk-pagination={`{items:${total}, itemsOnPage:${itemsOnPage}}`}\n    >\n      <li className={`${counter === 1 ? \"uk-disabled\" : null}`}>\n        <button\n          className=\"uk-button uk-button-default\"\n          onClick={() => onButtonClick(\"prev\")}\n        >\n          <span uk-icon=\"arrow-left\"></span> Anterior\n        </button>\n      </li>\n      {links && setLinks()}\n      <li className={`${counter === numberOfLinks ? \"uk-disabled\" : null}`}>\n        <button\n          className=\"uk-button uk-button-default\"\n          onClick={() => onButtonClick(\"next\")}\n        >\n          Próximo <span uk-icon=\"arrow-right\"></span>\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import { GoogleSpreadsheet } from \"google-spreadsheet\";\n\n// Credentials\nimport credentials from \"../credentials/google-sheets-api.json\";\n\nconst doc = new GoogleSpreadsheet(\n  process.env.REACT_APP_GOOGLE_SPREADSHEET as string\n);\n\ndoc.useServiceAccountAuth({\n  client_email: credentials.client_email,\n  private_key: credentials.private_key,\n  // client_email: process.env.REACT_APP_GOOGLE_CLIENT_EMAIL as string,\n  // private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY as string\n});\n\nexport { doc };\n","import { doc } from \"../../services/google.spreadsheets\";\nimport { Product } from \"../Product\";\n\n// API\n// import api from \"../../services/api\";\n\n// Props\nexport interface Producer {\n  id: number;\n  data_atualizacao: string;\n  tipo: string;\n  nome: string;\n  proprietario: string;\n  inscricao_estadual: string;\n  empregados: string;\n  area_total: string;\n  area_de_horta: string;\n  area_de_pomar: string;\n  irrigacao: boolean;\n  cultivo_protegido: boolean;\n  veiculos: number;\n  comercializacao: string[];\n  latitude: number;\n  longitude: number;\n  produtos: Product[];\n}\n\n// const URL_PRODUCERS = `${api.URL_BACKEND}/producers`;\n\nconst getAll = async () => {\n  await doc.loadInfo(); // loads document properties and worksheets\n  // console.log(doc.title);\n  // console.log(doc);\n\n  const sheet = doc.sheetsByIndex[0];\n  const rows = await sheet.getRows();\n  const itens = rows.map(\n    ({\n      ID,\n      DataAtualização,\n      Tipo,\n      Nome,\n      Proprietário,\n      InscriçãoEstadual,\n      Empregados,\n      AreaTotal,\n      AreaDeHorta,\n      AreaDePomar,\n      Irrigação,\n      CultivoProtegido,\n      Veiculos,\n      Comercialização,\n      Latitude,\n      Longitude,\n    }) => {\n      return {\n        id: ID,\n        data_atualizacao: DataAtualização,\n        tipo: Tipo,\n        nome: Nome,\n        proprietario: Proprietário,\n        inscricao_estadual: InscriçãoEstadual,\n        empregados: Empregados,\n        area_total: AreaTotal,\n        area_de_horta: AreaDeHorta,\n        area_de_pomar: AreaDePomar,\n        irrigacao: Irrigação === \"1\" ? true : false,\n        cultivo_protegido: CultivoProtegido === \"1\" ? true : false,\n        veiculos: Veiculos,\n        comercializacao: Comercialização.replaceAll(' ', '').split(','),\n        latitude: parseFloat(Latitude),\n        longitude: parseFloat(Longitude),\n        produtos: []\n      };\n    }\n  );\n\n  // eslint-disable-next-line array-callback-return\n  // itens.map((item) => {\n  //   create(item);\n  // });\n\n  return itens;\n};\n\n// const getAll = async () => {\n//   return fetch(`${URL_PRODUCERS}?_embed=products`).then(async (response) => {\n//     if (response.ok) {\n//       const resposta = await response.json();\n//       return resposta;\n//     }\n\n//     throw new Error(\"Não foi possível pegar os dados\");\n//   });\n// };\n\n// const create = async (producer: Producer) => {\n//   const response = await fetch(`${URL_PRODUCERS}`, {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-type\": \"application/json\",\n//     },\n\n//     body: JSON.stringify(producer),\n//   });\n\n//   return response.status;\n//   // if (response.ok) {\n//   //   const resposta = await response.json();\n//   //   return resposta;\n//   // }\n//   // throw new Error(\"Não foi possível cadastrar os dados\");\n// };\n\nexport default { getAll };\n","import { doc } from \"../../services/google.spreadsheets\";\n\n// Props\nexport interface ProductionOfTheMonth {\n  month: string;\n  total: number;\n}\n\nexport interface Product {\n  producerId: number;\n  name: string;\n  year: number;\n  months: ProductionOfTheMonth[];\n  jan: number;\n  fev: number;\n  mar: number;\n  abr: number;\n  mai: number;\n  jun: number;\n  jul: number;\n  ago: number;\n  set: number;\n  out: number;\n  nov: number;\n  dez: number;\n  total: number;\n}\n\nconst getAll = async () => {\n  await doc.loadInfo(); // loads document properties and worksheets\n  //   console.log(doc.title);\n\n  const sheet = doc.sheetsByIndex[1];\n  const rows = await sheet.getRows();\n  const itens = rows.map(\n    ({\n      Produtor,\n      Produto,\n      Ano,\n      Janeiro,\n      Fevereiro,\n      Março,\n      Abril,\n      Maio,\n      Junho,\n      Julho,\n      Agosto,\n      Setembro,\n      Outubro,\n      Novembro,\n      Dezembro,\n      Total\n    }) => {\n      return {\n        producerId: Produtor,\n        name: Produto,\n        year: Ano,\n        months: [\n          { month: \"jan\", total: Janeiro },\n          { month: \"fev\", total: Fevereiro },\n          { month: \"mar\", total: Março },\n          { month: \"abr\", total: Abril },\n          { month: \"mai\", total: Maio },\n          { month: \"jun\", total: Junho },\n          { month: \"jul\", total: Julho },\n          { month: \"ago\", total: Agosto },\n          { month: \"set\", total: Setembro },\n          { month: \"out\", total: Outubro },\n          { month: \"nov\", total: Novembro },\n          { month: \"dez\", total: Dezembro },\n        ],\n        jan: Janeiro,\n        fev: Fevereiro,\n        mar: Março,\n        abr: Abril,\n        mai: Maio,\n        jun: Junho,\n        jul: Julho,\n        ago: Agosto,\n        set: Setembro,\n        out: Outubro,\n        nov: Novembro,\n        dez: Dezembro,\n        total: Total\n      };\n    }\n  );\n\n  // eslint-disable-next-line array-callback-return\n  // itens.map((item) => {\n  //   create(item);\n  // });\n\n  return itens;\n};\n\n// const create = async (product: Product) => {\n//   const response = await fetch(`http://localhost:8000/products`, {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-type\": \"application/json\",\n//     },\n//     body: JSON.stringify(product),\n//   });\n\n//   return response.status;\n//   if (response.ok) {\n//     const resposta = await response.json();\n//     return resposta;\n//   }\n//   throw new Error(\"Não foi possível cadastrar os dados\");\n// };\n\nexport default { getAll };\n","import { doc } from \"../../services/google.spreadsheets\";\n\n// Props\nexport interface Highlighter {\n  id: number;\n  type: string;\n  name: string;\n  lat: number;\n  lng: number;\n  description: string;\n  icon?: number;\n}\n\nconst getIcon = (type: string) => {\n  if (type === \"Ponte\") {\n    return 0;\n  } else if (type === \"Serviço\") {\n    return 1;\n  } else if (type === \"Mata-burro\") {\n    return 2;\n  } else if (type === \"Porteira\") {\n    return 3;\n  } else if (type === \"Silo\") {\n    return 4;\n  } else if (type === \"Tanque\") {\n    return 5;\n  } else if (type === \"Represa\") {\n    return 6;\n  } else if (type === \"Agroindústria\") {\n    return 7;\n  }\n};\n\nconst getAll = async () => {\n  await doc.loadInfo(); // loads document properties and worksheets\n  //   console.log(doc.title);\n\n  const sheet = doc.sheetsByIndex[2];\n  const rows = await sheet.getRows();\n  const itens = rows.map(\n    ({ ID, Tipo, Nome, Latitude, Longitude, Descrição }) => {\n      return {\n        id: ID,\n        type: Tipo,\n        name: Nome,\n        lat: parseFloat(Latitude),\n        lng: parseFloat(Longitude),\n        description: Descrição,\n        icon: getIcon(Tipo),\n      };\n    }\n  );\n\n  // eslint-disable-next-line array-callback-return\n  // itens.map((item) => {\n  //   create(item);\n  // });\n\n  return itens;\n};\n\n// const create = async (highlighter: Highlighter) => {\n//   const response = await fetch(`http://localhost:8000/highlighters`, {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-type\": \"application/json\",\n//     },\n//     body: JSON.stringify(highlighter),\n//   });\n\n//   return response.status;\n//   if (response.ok) {\n//     const resposta = await response.json();\n//     return resposta;\n//   }\n//   throw new Error(\"Não foi possível cadastrar os dados\");\n// };\n\nexport default { getAll };\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, {\n  useState,\n  useCallback,\n  FormEvent,\n  ChangeEvent,\n  useEffect,\n} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ValueType, OptionTypeBase as OptionType } from \"react-select\";\n\n// Components\nimport { Select, Checkbox, Button, Table } from \"../Html\";\nimport GoogleMap from \"../GoogleMaps\";\nimport LeafletMap from \"../LeafletMaps\";\nimport Pagination from \"../Pagination\";\n\n// Data\nimport data from \"../../data/data.json\";\n\n// Repositories\nimport producerRepository, { Producer } from \"../../repositories/Producer\";\nimport productRepository, { Product } from \"../../repositories/Product\";\nimport highlighterRepository, {\n  Highlighter,\n} from \"../../repositories/Highlighter\";\n// import georeferencingRepository, { Georeferencing } from \"../../repositories/Georeferencing\";\n\ninterface Filter {\n  value: string;\n  label: string;\n}\n\nfunction FormSearch() {\n  // Filters\n  const [structures, setStructures] = useState<Filter[]>([]);\n  const [months, setMonths] = useState<Filter[]>([]);\n  const [livestocks, setLivestocks] = useState<Filter[]>([]);\n  const [productions, setProductions] = useState<Filter[]>([]);\n  const [commercializations, setCommercializations] = useState<Filter[]>([]);\n  const [coveredPlanting, setCoveredPlanting] = useState(false);\n  const [irrigated, setIrrigated] = useState(false);\n\n  // DB\n  const [dbProducers, setDbProducers] = useState<Producer[]>([]);\n  const [dbProducts, setDbProducts] = useState<Product[]>([]);\n  const [dbHighlighter, setDbHighlighter] = useState<Highlighter[]>([]);\n  // const [dbGeoreferencing, setDbGeoreferencing] = useState<Georeferencing[]>([]);\n\n  //\n  const [producers, setProducers] = useState<Producer[]>([]);\n  const [products, setProducts] = useState<Product[]>([]);\n  const [highlighters, setHighlighters] = useState<Highlighter[]>([]);\n  // const [georeferencing, setGeoreferencing] = useState<Georeferencing[]>([]);\n\n  // Pagination\n  const [itemsOnPage, setItemsOnPage] = useState(4);\n  const [pagination, setPagination] = useState({\n    start: 0,\n    end: itemsOnPage,\n  });\n\n  const onPaginationChange = (start: number, end: number) => {\n    setPagination({ start: start, end: end });\n  };\n  // Pagination\n\n  // Load Data From Google Spreadsheets\n  useEffect(() => {\n    const loadDataSpreadsheetsFromGoogle = () => {\n      productRepository\n        .getAll()\n        .then((response) => {\n          setDbProducts(response);\n          sessionStorage.setItem(\"products\", JSON.stringify(response));\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n        .finally(() => {\n          console.log(\"Produtos\");\n        });\n\n      producerRepository\n        .getAll()\n        .then((response) => {\n          setDbProducers(response);\n          sessionStorage.setItem(\"producers\", JSON.stringify(response));\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n        .finally(() => {\n          console.log(\"Produtores\");\n        });\n\n      highlighterRepository\n        .getAll()\n        .then((response) => {\n          setDbHighlighter(response);\n          sessionStorage.setItem(\"highlighters\", JSON.stringify(response));\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n        .finally(() => {\n          console.log(\"Marcadores\");\n        });\n\n      // georeferencingRepository\n      //   .getAll()\n      //   .then((response) => {\n      //     sessionStorage.setItem(\"georeferencing\", JSON.stringify(response));\n      //   })\n      //   .catch((error) => {\n      //     console.error(error);\n      //   })\n      //   .finally(() => {\n      //     console.log(\"Georeferenciamento\");\n      //   });\n    };\n\n    const lastUpdate = sessionStorage.getItem(\"lastUpdate\");\n    const data = new Date();\n\n    if (lastUpdate) {\n      let dateFromStorage = Date.parse(JSON.parse(lastUpdate));\n      let actualDate = Date.parse(data.toISOString().split(\"T\")[0]);\n\n      if (actualDate > dateFromStorage) {\n        sessionStorage.clear();\n        loadDataSpreadsheetsFromGoogle();\n      }\n    } else {\n      sessionStorage.setItem(\n        \"lastUpdate\",\n        JSON.stringify(data.toISOString().split(\"T\")[0])\n      );\n      loadDataSpreadsheetsFromGoogle();\n    }\n  }, []);\n\n  useEffect(() => {\n    const products = sessionStorage.getItem(\"products\");\n    if (products) {\n      setDbProducts(JSON.parse(products));\n    }\n\n    const producers = sessionStorage.getItem(\"producers\");\n    if (producers) {\n      setDbProducers(JSON.parse(producers));\n      // setProducers(JSON.parse(producers));\n    }\n\n    const highlighters = sessionStorage.getItem(\"highlighters\");\n    if (highlighters) {\n      setDbHighlighter(JSON.parse(highlighters));\n      // setHighlighters(JSON.parse(highlighters));\n    }\n\n    // const georeferencing = sessionStorage.getItem(\"georeferencing\");\n    // if (georeferencing) {\n    //   setGeoreferencing(JSON.parse(georeferencing));\n    // }\n  }, []);\n\n  useEffect(() => {\n    // const script = document.createElement(\"script\");\n    // script.src = \"js/content.js\";\n    // script.async = true;\n    // document.body.appendChild(script);\n  }, []);\n\n  // Load Producer Specific Products\n  const loadSpecificProductsFromProducers = useCallback(() => {\n    let newProducers = dbProducers.map((producer: Producer) => {\n      return {\n        ...producer,\n        produtos: dbProducts.filter(\n          (product: Product) => product.producerId === producer.id\n        ),\n      };\n    });\n\n    setProducers(newProducers);\n  }, [dbProducers, dbProducts]);\n\n  // Performs Query Based On Filters\n  const performsQueryBasedOnFilters = useCallback(() => {}, []);\n\n  // Clear Search Form\n  const handleClearSearchForm = useCallback(() => {\n    setStructures([]);\n    setMonths([]);\n    setLivestocks([]);\n    setProductions([]);\n    setCommercializations([]);\n    setCoveredPlanting(false);\n    setIrrigated(false);\n\n    setProducers([]);\n  }, []);\n\n  // Submit Search Form\n  const handleSubmitSearchForm = useCallback(() => {\n    // loadSpecificProductsFromProducers();\n    let producersWithProducts = dbProducers.map((producer: Producer) => {\n      return {\n        ...producer,\n        produtos: dbProducts.filter(\n          (product: Product) => product.producerId === producer.id\n        ),\n      };\n    });\n\n    if (\n      structures.length === 0 &&\n      livestocks.length === 0 &&\n      commercializations.length === 0 &&\n      months.length === 0 &&\n      productions.length === 0 &&\n      coveredPlanting === false &&\n      irrigated === false\n    ) {\n      setProducers(producersWithProducts);\n      setHighlighters(dbHighlighter);\n    } else {\n      // List filters\n      let filterCommercializations: any[] = [];\n      if (commercializations && commercializations.length > 0) {\n        filterCommercializations = commercializations.map((item) => item.value);\n        // console.log(filterCommercializations);\n      }\n\n      let filterLivestocks: any[] = [];\n      if (livestocks && livestocks.length > 0) {\n        livestocks.map((item) => filterLivestocks.push(item.value));\n        // console.log(filterLivestocks);\n      }\n\n      let filterProductions: any[] = [];\n      if (productions && productions.length > 0) {\n        productions.map((item) => filterProductions.push(item.value));\n        // console.log(filterProductions);\n      }\n\n      let filterMonths: any[] = [];\n      if (months && months.length > 0) {\n        filterMonths = months.map((item) => item.value);\n      }\n\n      let filterStructures: any[] = [];\n      if (structures && structures.length > 0) {\n        filterStructures = structures.map((item) => item.value);\n        // console.log(filterStructures);\n      }\n\n      // Production Filter\n      let producersWithProductionFilter = producersWithProducts\n        .map((producer: Producer) => {\n          let newProducts = producer.produtos.filter(\n            (product: Product) =>\n              filterProductions.includes(product.name) === true\n          );\n          return { ...producer, produtos: newProducts };\n        })\n        .filter((producer: Producer) => producer.produtos?.length > 0)\n        .filter((producer: Producer) =>\n          producer.irrigacao === irrigated ? producer : null\n        )\n        .filter((producer: Producer) =>\n          producer.cultivo_protegido === coveredPlanting ? producer : null\n        )\n        .filter((producer: Producer) => {\n          return filterCommercializations.map((item) =>\n            producer.comercializacao.indexOf(item) > -1 ? producer : null\n          );\n        });\n\n      // Livestock Filter\n      let producersWithLivestockFilter = producersWithProducts\n        .map((producer: Producer) => {\n          let newProducts = producer.produtos.filter(\n            (product: Product) =>\n              filterLivestocks.includes(product.name) === true\n          );\n          return { ...producer, produtos: newProducts };\n        })\n        .filter((producer: Producer) => producer.produtos.length > 0)\n        .filter((producer: Producer) =>\n          filterCommercializations.map((item) =>\n            producer.comercializacao.includes(item)\n          )\n        );\n\n      // Livestock and Production Filter\n      let producersLivestockAndProduction = producersWithProductionFilter.concat(\n        producersWithLivestockFilter\n      );\n\n      // Livestock and Month Filter\n      let producersWithMonthFilter = producersWithProductionFilter.filter(\n        (producer: Producer) => {\n          // Products With Month Filter\n          let productsWithMonthFilter = producer.produtos.filter(\n            (product: Product) => {\n              // Month with Positive Production\n              let monthsWithProduction = product.months.filter(\n                (month) => month.total > 0\n              );\n              // Filtered Based on the Filter\n              let filteredProducts = monthsWithProduction\n                .map((production) =>\n                  filterMonths.includes(production.month) === true\n                    ? product\n                    : null\n                )\n                .filter((product) => product);\n\n              return filteredProducts.length > 0 ? product : null;\n            }\n          );\n          // console.log(\"productsWithMonthFilter: \", productsWithMonthFilter);\n          return { ...producer, produtos: productsWithMonthFilter };\n        }\n      );\n\n      // Structure Filter\n      let highlightersWithStructureFilter = dbHighlighter.filter(\n        (highlighter: Highlighter) => {\n          return filterStructures.includes(highlighter.type) === true\n            ? highlighter\n            : null;\n        }\n      );\n      // console.log(\"Filter: \", highlightersWithStructureFilter);\n\n      setHighlighters(highlightersWithStructureFilter);\n      setProducers(producersLivestockAndProduction);\n    }\n  }, [\n    commercializations,\n    coveredPlanting,\n    dbHighlighter,\n    dbProducers,\n    dbProducts,\n    irrigated,\n    livestocks,\n    months,\n    productions,\n    structures,\n  ]);\n\n  return (\n    <>\n      <form\n        onSubmit={(event: FormEvent) => {\n          event.preventDefault();\n          handleSubmitSearchForm();\n        }}\n      >\n        <fieldset className=\"uk-fieldset\">\n          <legend className=\"uk-legend\">\n            <strong>Selecione o que você procura:</strong>\n          </legend>\n\n          <div\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid uk-grid-stack\"\n            uk-grid=\"\"\n          >\n            <div className=\"uk-width-expand uk-first-column\">\n              <Select\n                name=\"structures\"\n                placeholder=\"Selecione a estrutura geográfica...\"\n                isMultiple={true}\n                value={structures}\n                options={data.geographic_structure}\n                // onChange={setStructures}\n                onChange={(selectedOption: ValueType<OptionType>) => {\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                  const value = (selectedOption as OptionType).value;\n\n                  setStructures(\n                    selectedOption?.map((selected: OptionType) => selected)\n                  );\n                }}\n              />\n            </div>\n            <div className=\"uk-width-1-2@s uk-grid-margin uk-first-column\">\n              <Select\n                name=\"months\"\n                placeholder=\"Selecione a sazonalidade...\"\n                isMultiple={true}\n                value={months}\n                options={data.months}\n                // onChange={setMonths}\n                onChange={(selectedOption: ValueType<OptionType>) => {\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                  const value = (selectedOption as OptionType).value;\n\n                  setMonths(\n                    selectedOption?.map((selected: OptionType) => selected)\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <div\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid\"\n            uk-grid=\"\"\n          >\n            <div className=\"uk-width-expand uk-first-column\">\n              <Select\n                name=\"livestocks\"\n                placeholder=\"Selecione a pecuária...\"\n                isMultiple={true}\n                value={livestocks}\n                options={data.livestock}\n                // onChange={setLivestocks}\n                onChange={(selectedOption: ValueType<OptionType>) => {\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                  const value = (selectedOption as OptionType).value;\n\n                  setLivestocks(\n                    selectedOption?.map((selected: OptionType) => selected)\n                  );\n                }}\n              />\n            </div>\n            <div className=\"uk-width-expand\">\n              <div id=\"filter_producao\">\n                <Select\n                  name=\"productions\"\n                  placeholder=\"Selecione os gêneros alimentícios...\"\n                  isMultiple={true}\n                  value={productions}\n                  options={data.production}\n                  // onChange={setProductions}\n                  onChange={(selectedOption: ValueType<OptionType>) => {\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    const value = (selectedOption as OptionType).value;\n\n                    setProductions(\n                      selectedOption?.map((selected: OptionType) => selected)\n                    );\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid\"\n            uk-grid=\"\"\n          >\n            <div className=\"uk-width-1-2@s uk-first-column\">\n              <Select\n                name=\"commercializations\"\n                placeholder=\"Selecione os canais de comercialização...\"\n                isMultiple={true}\n                value={commercializations}\n                options={data.commercialization}\n                // onChange={setCommercializations}\n                onChange={(selectedOption: ValueType<OptionType>) => {\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                  const value = (selectedOption as OptionType).value;\n\n                  setCommercializations(\n                    selectedOption?.map((selected: OptionType) => selected)\n                  );\n                }}\n              />\n            </div>\n            <div className=\"uk-width-1-2@s uk-grid-margin uk-first-column\">\n              <div className=\"uk-child-width-expand uk-grid\" uk-grid=\"\">\n                <div className=\"uk-first-column\">\n                  <Checkbox\n                    name=\"coveredPlanting\"\n                    label=\"Plantio coberto\"\n                    checked={coveredPlanting}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      setCoveredPlanting(event.target.checked);\n                    }}\n                  />\n                </div>\n                <div>\n                  <Checkbox\n                    name=\"irrigated\"\n                    label=\"Irrigação\"\n                    checked={irrigated}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      setIrrigated(event.target.checked);\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-expand uk-grid-margin uk-first-column\">\n              <Button type=\"submit\" label=\"Filtrar\" />\n            </div>\n            <div className=\"uk-width-auto uk-grid-margin\">\n              <Link\n                to=\"#\"\n                className=\"uk-button uk-button-default uk-button-large uk-icon-link uk-icon\"\n                uk-icon=\"icon: close; ratio: 2\"\n                onClick={handleClearSearchForm}\n              />\n            </div>\n          </div>\n        </fieldset>\n      </form>\n\n      {process.env.REACT_APP_USE_GOOGLE_MAP === \"true\" ? (\n        <GoogleMap producers={producers} highlighters={highlighters} />\n      ) : (\n        <LeafletMap producers={producers} highlighters={highlighters} />\n      )}\n\n      {producers && producers.length > 0 && <hr />}\n\n      {producers &&\n        producers.length > 0 &&\n        producers\n          .slice(pagination.start, pagination.end)\n          .map((producer, index) => <Table key={index} data={producer} />)}\n\n      {producers && producers.length > 0 && (\n        <Pagination\n          itemsOnPage={itemsOnPage}\n          onPaginationChange={onPaginationChange}\n          total={producers.length}\n          alignment=\"right\"\n        />\n      )}\n    </>\n  );\n}\n\nexport default FormSearch;\n","import React from \"react\";\n\n// Layout\nimport Default from \"../Layouts/Default\";\n\n// Components\nimport FormSearch from \"../../components/FormSearch\";\n\nfunction Home() {\n  return (\n    <Default>\n      <section className=\"uk-section uk-section-small\">\n        <div className=\"uk-container\">\n          <FormSearch />\n        </div>\n      </section>\n    </Default>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\n\nfunction Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/valorize-sua-cidade\" component={Home} exact />\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Routes\nimport Routes from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}