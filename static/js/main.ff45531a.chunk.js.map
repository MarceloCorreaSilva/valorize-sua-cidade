{"version":3,"sources":["assets/icons/bridge.svg","assets/icons/gate.svg","assets/icons/services.svg","assets/icons/dais.svg","assets/icons/silo.svg","assets/icons/water-tank.svg","assets/icons/fish.svg","assets/icons/vegetable.svg","components/Header/index.tsx","components/Footer/index.tsx","pages/Layouts/Default/index.tsx","components/Html/Button/index.tsx","components/Html/Checkbox/index.tsx","components/Html/Select/index.tsx","components/Html/Table/index.tsx","components/GoogleMaps/index.tsx","components/LeafletMaps/index.tsx","components/FormSearch/index.tsx","services/google.spreadsheets.ts","repositories/Producer/index.ts","repositories/Product/index.ts","repositories/Highlighter/index.ts","repositories/Georeferencing/index.ts","pages/Home/index.tsx","routes.tsx","index.tsx"],"names":["module","exports","Header","className","style","background","process","Footer","Default","children","uk-height-viewport","Button","label","type","rest","fontSize","fontWeight","Checkbox","name","checked","onChange","display","verticalAlign","height","lineHeight","id","width","Select","placeholder","isMultiple","value","options","isMulti","theme","colors","primary25","borderRadius","Table","data","marginBottom","nome","proprietario","irrigacao","cultivo_protegido","veiculos","comercializacao","join","produtos","map","product","index","key","year","jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez","total","React","memo","producers","highlighters","onLoad","useEffect","geo","sessionStorage","getItem","geo3","JSON","parse","coordinates","geo7","stringify","replaceAll","replace","split","i","a","filter","el","length","lat","lng","parseFloat","console","log","googleMapsApiKey","mapContainerStyle","center","zoom","strokeColor","strokeOpacity","strokeWeight","highlighter","title","position","producer","latitude","longitude","LeafletMaps","icons","Icon","iconUrl","bridge","iconSize","services","dais","gate","silo","waterTank","fish","vegetable","opacity","TileLayer","attribution","url","Marker","Popup","Tooltip","icon","description","GeoJSON","FormSearch","useState","structures","setStructures","months","setMonths","livestocks","setLivestocks","productions","setProductions","commercializations","setCommercializations","coveredPlanting","setCoveredPlanting","irrigated","setIrrigated","dbProducers","setDbProducers","dbProducts","setDbProducts","dbHighlighter","setDbHighlighter","setDbGeoreferencing","setProducers","setHighlighters","products","georeferencing","useCallback","newProducers","producerId","handleClearSearchForm","handleSubmitSearchForm","producersWithProducts","filterCommercializations","item","filterLivestocks","push","filterProductions","filterMonths","filterStructures","producersWithProductionFilter","newProducts","includes","indexOf","producersWithLivestockFilter","producersLivestockAndProduction","concat","highlightersWithStructureFilter","productsWithMonthFilter","month","production","onSubmit","event","preventDefault","uk-grid","geographic_structure","selectedOption","selected","livestock","commercialization","target","to","uk-icon","onClick","justifyContent","alignContent","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","credentials","private_key","getAll","loadInfo","sheet","sheetsByIndex","getRows","rows","itens","ID","DataAtualização","Tipo","Nome","Proprietário","InscriçãoEstadual","Empregados","AreaTotal","AreaDeHorta","AreaDePomar","Irrigação","CultivoProtegido","Veiculos","Comercialização","Latitude","Longitude","data_atualizacao","tipo","inscricao_estadual","empregados","area_total","area_de_horta","area_de_pomar","Produtor","Produto","Ano","Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro","Total","Descrição","owner","area","Área","Coordenadas","Home","loadDataSpreadsheetsFromGoogle","productRepository","then","response","setItem","catch","error","finally","producerRepository","highlighterRepository","georeferencingRepository","lastUpdate","Date","dateFromStorage","toISOString","clear","Routes","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff45531a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bridge.caad6053.svg\";","module.exports = __webpack_public_path__ + \"static/media/gate.a15b9fa3.svg\";","module.exports = __webpack_public_path__ + \"static/media/services.bb580988.svg\";","module.exports = __webpack_public_path__ + \"static/media/dais.d9cdd023.svg\";","module.exports = __webpack_public_path__ + \"static/media/silo.9b572feb.svg\";","module.exports = __webpack_public_path__ + \"static/media/water-tank.a33b2a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/fish.2b801fad.svg\";","module.exports = __webpack_public_path__ + \"static/media/vegetable.b97f4ccb.svg\";","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <section\r\n      className=\"uk-section uk-section-small uk-section-primary\"\r\n      style={{ background: \"#305183\" }}\r\n    >\r\n      <div className=\"uk-container\">\r\n        <h2 className=\"uk-margin-remove uk-text-bold\">\r\n          Mapa de {process.env.REACT_APP_CITY_NAME}\r\n        </h2>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return <></>;\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport Header from \"../../../components/Header\";\r\nimport Footer from \"../../../components/Footer\";\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Default: React.FC<LayoutProps> = ({ children }) => {\r\n  return (\r\n    <div className=\"uk-offcanvas-content\">\r\n      <div uk-height-viewport=\"expand: true\">\r\n        <Header />\r\n\r\n        {children}\r\n\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Default;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\n\r\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  label: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ label, type, ...rest }) => {\r\n  return (\r\n    <button\r\n      type={type}\r\n      className=\"uk-button uk-button-primary uk-button-large uk-width-expand\"\r\n      {...rest}\r\n      style={{\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n      }}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { Button };\r\n","import React, { InputHTMLAttributes } from \"react\";\r\n\r\ninterface CheckboxProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  label: string;\r\n  checked: boolean;\r\n}\r\n\r\nconst Checkbox: React.FC<CheckboxProps> = ({\r\n  name,\r\n  label,\r\n  checked,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <label\r\n      style={{\r\n        display: \"block\",\r\n        verticalAlign: \"top\",\r\n        height: \"38px\",\r\n        lineHeight: \"38px\",\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n      }}\r\n    >\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        className=\"uk-checkbox\"\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={onChange}\r\n        style={{\r\n          width: \"38px\",\r\n          height: \"38px\",\r\n          // margin: \"0 auto\",\r\n          verticalAlign: \"bottom\",\r\n        }}\r\n      />{\" \"}\r\n      {label}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport { Checkbox };\r\n","import React from \"react\";\r\nimport ReactSelect, { Props, Theme } from \"react-select\";\r\n\r\nconst Select: React.FC<Props> = ({\r\n  name,\r\n  placeholder,\r\n  isMultiple,\r\n  value,\r\n  options,\r\n  onChange,\r\n}) => {\r\n  function customTheme(theme: Theme): Theme {\r\n    return {\r\n      ...theme,\r\n      colors: {\r\n        ...theme.colors,\r\n        primary25: \"#D3D3D3\",\r\n      },\r\n      borderRadius: 0,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-form-controls\">\r\n      <ReactSelect\r\n        id={name}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        isMulti={isMultiple}\r\n        value={value}\r\n        options={options}\r\n        onChange={onChange}\r\n        theme={customTheme}\r\n        // className=\"basic-multi-select\"\r\n        // classNamePrefix=\"select\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Select };\r\n","import React from \"react\";\r\nimport { ProductionOfTheMonth } from \"../../../repositories/Product\";\r\n\r\n// Props\r\nexport interface TableProps {\r\n  data: {\r\n    id: number;\r\n    nome: string;\r\n    proprietario: string;\r\n    irrigacao: boolean;\r\n    cultivo_protegido: boolean;\r\n    veiculos: number;\r\n    comercializacao: string[];\r\n    produtos: {\r\n      name: string;\r\n      year: number;\r\n      months: ProductionOfTheMonth[];\r\n      jan: number;\r\n      fev: number;\r\n      mar: number;\r\n      abr: number;\r\n      mai: number;\r\n      jun: number;\r\n      jul: number;\r\n      ago: number;\r\n      set: number;\r\n      out: number;\r\n      nov: number;\r\n      dez: number;\r\n      total: number;\r\n    }[];\r\n  };\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ data }) => {\r\n  return (\r\n    <div className=\"uk-card uk-card-default\" style={{ marginBottom: \"25px\" }}>\r\n      <div className=\"uk-card-header\">\r\n        <h3 className=\"uk-card-title\">\r\n          {data.id} - {data.nome}\r\n        </h3>\r\n        <p>\r\n          <strong>Proprietário(a):</strong> {data.proprietario} /{\" \"}\r\n          <strong>Irrigado:</strong> {data.irrigacao === true ? \"Sim\" : \"Não\"} /{\" \"}\r\n          <strong>Cultivo protegido:</strong>{\" \"}\r\n          {data.cultivo_protegido === true ? \"Sim\" : \"Não\"} /{\" \"}\r\n          <strong>Veiculos:</strong> {data.veiculos} /{\" \"}\r\n          <strong>Comercialização:</strong> {data.comercializacao.join(', ')}\r\n        </p>\r\n      </div>\r\n      <div className=\"uk-card-body\">\r\n        <div className=\"uk-overflow-auto\">\r\n          <table className=\"uk-table uk-table-divider uk-table-small\">\r\n            <thead>\r\n              <tr>\r\n                <th>Produto</th>\r\n                <th>Ano</th>\r\n                <th>Jan</th>\r\n                <th>Fev</th>\r\n                <th>Mar</th>\r\n                <th>Abr</th>\r\n                <th>Mai</th>\r\n                <th>Jun</th>\r\n                <th>Jul</th>\r\n                <th>Ago</th>\r\n                <th>Set</th>\r\n                <th>Out</th>\r\n                <th>Nov</th>\r\n                <th>Dez</th>\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.produtos &&\r\n                data.produtos.map((product, index) => (\r\n                  <tr key={index}>\r\n                    <td>{product.name}</td>\r\n                    <td>{product.year}</td>\r\n                    <td>{product.jan}</td>\r\n                    <td>{product.fev}</td>\r\n                    <td>{product.mar}</td>\r\n                    <td>{product.abr}</td>\r\n                    <td>{product.mai}</td>\r\n                    <td>{product.jun}</td>\r\n                    <td>{product.jul}</td>\r\n                    <td>{product.ago}</td>\r\n                    <td>{product.set}</td>\r\n                    <td>{product.out}</td>\r\n                    <td>{product.nov}</td>\r\n                    <td>{product.dez}</td>\r\n                    <td>{product.total}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Table };\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GoogleMap, LoadScript, Marker, Polygon } from \"@react-google-maps/api\";\r\n\r\n// Components || Interfaces\r\nimport { Producer } from \"../../repositories/Producer\";\r\nimport { Highlighter } from \"../../repositories/Highlighter\";\r\n\r\ninterface Props {\r\n  producers: Producer[];\r\n  highlighters: Highlighter[];\r\n}\r\n\r\nconst Map: React.FC<Props> = ({ producers, highlighters }) => {\r\n  const onLoad = (data: any) => {\r\n    // console.log(\"data: \", data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let geo = sessionStorage.getItem(\"georeferencing\");\r\n    let geo2 = JSON.parse(geo ? geo : \"\");\r\n    let geo3 = geo2[0].coordinates;\r\n    let geo4 = JSON.stringify(geo3);\r\n    let geo5 = geo4.replaceAll('\"', \"\").replace(\"[\", \"\").replace(\"]\", \"\").replaceAll('{', '[').replaceAll('}', ']');\r\n    let geo6 = geo5.split(']');\r\n    // console.log(geo6);\r\n    let geo7 = geo6.map((geo, i) => {\r\n      let a = geo.split(',').filter((el) => el !== \"\").filter((el) => el.length > 0);\r\n      let lat = null;\r\n      let lng = null;\r\n      // return console.log(a);\r\n      if (a.length === 2) {\r\n        lat = a[0].replace('[lat:', '').replace(',[lat:', '');\r\n        lng = a[1].replace('lng:', '');\r\n        return [parseFloat(lat), parseFloat(lng)];\r\n      }\r\n      return [];\r\n    });\r\n\r\n    console.log(geo7);\r\n  }, []);\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_API_KEY}>\r\n      <GoogleMap\r\n        mapContainerStyle={{\r\n          width: \"100%\",\r\n          height: \"400px\",\r\n        }}\r\n        center={{\r\n          lat: -18.675444,\r\n          lng: -53.64186,\r\n        }}\r\n        zoom={10}\r\n      >\r\n        <Polygon\r\n          // path={[]}\r\n          options={{\r\n            strokeColor: '#fc1e0d',\r\n            strokeOpacity: 1,\r\n            strokeWeight: 2\r\n          }}\r\n        />\r\n        \r\n        {highlighters &&\r\n          highlighters.map((highlighter: Highlighter, key) => {\r\n            return (\r\n              <Marker\r\n                key={key}\r\n                title={highlighter.name}\r\n                onLoad={onLoad}\r\n                position={{\r\n                  lat: highlighter.lat,\r\n                  lng: highlighter.lng,\r\n                }}\r\n              >\r\n                {/* <InfoWindow\r\n                  onLoad={onLoad}\r\n                  position={{\r\n                    lat: highlighter.lat,\r\n                    lng: highlighter.lng,\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      background: `white`,\r\n                      border: `1px solid #ccc`,\r\n                      padding: 15,\r\n                    }}\r\n                  >\r\n                    <h1>{highlighter.name}</h1>\r\n                  </div>\r\n                </InfoWindow> */}\r\n              </Marker>\r\n            );\r\n          })}\r\n\r\n        {producers.map((producer: Producer, key) => (\r\n          <Marker\r\n            key={key}\r\n            title={producer.nome}\r\n            onLoad={onLoad}\r\n            position={{ lat: producer.latitude, lng: producer.longitude }}\r\n          />\r\n        ))}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default React.memo(Map);\r\n","import React, { useEffect } from \"react\";\r\nimport { Icon } from \"leaflet\";\r\nimport {\r\n  Map,\r\n  TileLayer,\r\n  Marker,\r\n  Popup,\r\n  Tooltip,\r\n  GeoJSON\r\n} from \"react-leaflet\";\r\nimport { Producer } from \"../../repositories/Producer\";\r\nimport { Highlighter } from \"../../repositories/Highlighter\";\r\n\r\nimport bridge from \"../../assets/icons/bridge.svg\";\r\nimport gate from \"../../assets/icons/gate.svg\";\r\nimport services from \"../../assets/icons/services.svg\";\r\nimport dais from \"../../assets/icons/dais.svg\";\r\nimport silo from \"../../assets/icons/silo.svg\";\r\nimport waterTank from \"../../assets/icons/water-tank.svg\";\r\nimport fish from \"../../assets/icons/fish.svg\";\r\nimport vegetable from \"../../assets/icons/vegetable.svg\";\r\n\r\ninterface Props {\r\n  producers: Producer[];\r\n  highlighters: Highlighter[];\r\n}\r\n\r\nconst LeafletMaps: React.FC<Props> = ({ producers, highlighters }) => {\r\n  const icons = [\r\n    new Icon({ iconUrl: bridge, iconSize: [40, 40] }),\r\n    new Icon({ iconUrl: services, iconSize: [40, 40] }),\r\n    new Icon({ iconUrl: dais, iconSize: [40, 40] }),\r\n    new Icon({ iconUrl: gate, iconSize: [40, 40] }),\r\n    new Icon({ iconUrl: silo, iconSize: [40, 40] }),\r\n    new Icon({ iconUrl: waterTank, iconSize: [40, 40] }),\r\n    new Icon({ iconUrl: fish, iconSize: [40, 40] }),\r\n    new Icon({ iconUrl: vegetable, iconSize: [40, 40] }),\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // console.log(highlighters);\r\n  }, [highlighters]);\r\n\r\n  return (\r\n    <Map\r\n      center={[-18.675444, -53.64186]}\r\n      zoom={10}\r\n      style={{ width: \"100%\", height: \"400px\", opacity: \"0.9\" }}\r\n    >\r\n      <TileLayer\r\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      {producers &&\r\n        producers.map((producer: Producer, key) => (\r\n          <Marker key={key} position={[producer.latitude, producer.longitude]}>\r\n            <Popup>{producer.nome}</Popup>\r\n            <Tooltip>Propriedade: {producer.nome}</Tooltip>\r\n          </Marker>\r\n        ))}\r\n\r\n      {highlighters &&\r\n        highlighters.map((highlighter: Highlighter, key) => (\r\n          <Marker\r\n            key={key}\r\n            position={[highlighter.lat, highlighter.lng]}\r\n            icon={icons[highlighter.icon]}\r\n          >\r\n            <Popup>\r\n              <div>\r\n                <h2>{highlighter.name}</h2>\r\n                <p>{highlighter.description}</p>\r\n              </div>\r\n            </Popup>\r\n            <Tooltip>{highlighter.type}</Tooltip>\r\n          </Marker>\r\n        ))}\r\n        <GeoJSON data={[]}></GeoJSON>\r\n    </Map>\r\n  );\r\n};\r\n\r\nexport default LeafletMaps;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, {\r\n  useState,\r\n  useCallback,\r\n  FormEvent,\r\n  ChangeEvent,\r\n  useEffect,\r\n} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ValueType, OptionTypeBase as OptionType } from \"react-select\";\r\n\r\n// Components\r\nimport { Select, Checkbox, Button, Table } from \"../Html\";\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport GoogleMap from \"../GoogleMaps\";\r\nimport LeafletMap from \"../LeafletMaps\";\r\n\r\n// Data\r\nimport data from \"../../data/data.json\";\r\n\r\n// Repositories\r\nimport producerRepository, { Producer } from \"../../repositories/Producer\";\r\nimport productRepository, {\r\n  Product,\r\n  ProductionOfTheMonth,\r\n} from \"../../repositories/Product\";\r\nimport highlighterRepository, {\r\n  Highlighter,\r\n} from \"../../repositories/Highlighter\";\r\nimport georeferencingRepository, {\r\n  Georeferencing,\r\n} from \"../../repositories/Georeferencing\";\r\n\r\ninterface Filter {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\nfunction FormSearch() {\r\n  // Filters\r\n  const [structures, setStructures] = useState<Filter[]>([]);\r\n  const [months, setMonths] = useState<Filter[]>([]);\r\n  const [livestocks, setLivestocks] = useState<Filter[]>([]);\r\n  const [productions, setProductions] = useState<Filter[]>([]);\r\n  const [commercializations, setCommercializations] = useState<Filter[]>([]);\r\n  const [coveredPlanting, setCoveredPlanting] = useState(false);\r\n  const [irrigated, setIrrigated] = useState(false);\r\n\r\n  // DB\r\n  const [dbProducers, setDbProducers] = useState<Producer[]>([]);\r\n  const [dbProducts, setDbProducts] = useState<Product[]>([]);\r\n  const [dbHighlighter, setDbHighlighter] = useState<Highlighter[]>([]);\r\n  const [dbGeoreferencing, setDbGeoreferencing] = useState<Georeferencing[]>(\r\n    []\r\n  );\r\n\r\n  //\r\n  const [producers, setProducers] = useState<Producer[]>([]);\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [highlighters, setHighlighters] = useState<Highlighter[]>([]);\r\n  const [georeferencing, setGeoreferencing] = useState<Georeferencing[]>([]);\r\n\r\n  useEffect(() => {\r\n    const producers = sessionStorage.getItem(\"producers\");\r\n    if (producers) {\r\n      setDbProducers(JSON.parse(producers));\r\n      // setProducers(JSON.parse(producers));\r\n    }\r\n\r\n    const products = sessionStorage.getItem(\"products\");\r\n    if (products) {\r\n      setDbProducts(JSON.parse(products));\r\n    }\r\n\r\n    const highlighters = sessionStorage.getItem(\"highlighters\");\r\n    if (highlighters) {\r\n      setDbHighlighter(JSON.parse(highlighters));\r\n      // setHighlighters(JSON.parse(highlighters));\r\n    }\r\n\r\n    const georeferencing = sessionStorage.getItem(\"georeferencing\");\r\n    if (georeferencing) {\r\n      setDbGeoreferencing(JSON.parse(georeferencing));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(producers);\r\n    // console.log(highlighters);\r\n  }, [highlighters, producers]);\r\n\r\n  // Load Producer Specific Products\r\n  const loadSpecificProductsFromProducers = useCallback(() => {\r\n    let newProducers = dbProducers.map((producer: Producer) => {\r\n      return {\r\n        ...producer,\r\n        produtos: dbProducts.filter(\r\n          (product: Product) => product.producerId === producer.id\r\n        ),\r\n      };\r\n    });\r\n\r\n    setProducers(newProducers);\r\n  }, [dbProducers, dbProducts]);\r\n\r\n  // Performs Query Based On Filters\r\n  const performsQueryBasedOnFilters = useCallback(() => {}, []);\r\n\r\n  // Clear Search Form\r\n  const handleClearSearchForm = useCallback(() => {\r\n    setStructures([]);\r\n    setMonths([]);\r\n    setLivestocks([]);\r\n    setProductions([]);\r\n    setCommercializations([]);\r\n    setCoveredPlanting(false);\r\n    setIrrigated(false);\r\n\r\n    setProducers([]);\r\n  }, []);\r\n\r\n  // Submit Search Form\r\n  const handleSubmitSearchForm = useCallback(() => {\r\n    // loadSpecificProductsFromProducers();\r\n    let producersWithProducts = dbProducers.map((producer: Producer) => {\r\n      return {\r\n        ...producer,\r\n        produtos: dbProducts.filter(\r\n          (product: Product) => product.producerId === producer.id\r\n        ),\r\n      };\r\n    });\r\n\r\n    if (\r\n      structures.length === 0 &&\r\n      livestocks.length === 0 &&\r\n      commercializations.length === 0 &&\r\n      months.length === 0 &&\r\n      productions.length === 0 &&\r\n      coveredPlanting === false &&\r\n      irrigated === false\r\n    ) {\r\n      setProducers(producersWithProducts);\r\n      setHighlighters(dbHighlighter);\r\n    } else {\r\n      // List filters\r\n      let filterCommercializations: any[] = [];\r\n      if (commercializations && commercializations.length > 0) {\r\n        filterCommercializations = commercializations.map((item) => item.value);\r\n        // console.log(filterCommercializations);\r\n      }\r\n\r\n      let filterLivestocks: any[] = [];\r\n      if (livestocks && livestocks.length > 0) {\r\n        livestocks.map((item) => filterLivestocks.push(item.value));\r\n        // console.log(filterLivestocks);\r\n      }\r\n\r\n      let filterProductions: any[] = [];\r\n      if (productions && productions.length > 0) {\r\n        productions.map((item) => filterProductions.push(item.value));\r\n        // console.log(filterProductions);\r\n      }\r\n\r\n      let filterMonths: any[] = [];\r\n      if (months && months.length > 0) {\r\n        filterMonths = months.map((item) => item.value);\r\n      }\r\n\r\n      let filterStructures: any[] = [];\r\n      if (structures && structures.length > 0) {\r\n        filterStructures = structures.map((item) => item.value);\r\n        // console.log(filterStructures);\r\n      }\r\n\r\n      // Production Filter\r\n      let producersWithProductionFilter = producersWithProducts\r\n        .map((producer: Producer) => {\r\n          let newProducts = producer.produtos.filter(\r\n            (product: Product) =>\r\n              filterProductions.includes(product.name) === true\r\n          );\r\n          return { ...producer, produtos: newProducts };\r\n        })\r\n        .filter((producer: Producer) => producer.produtos.length > 0)\r\n        .filter((producer: Producer) =>\r\n          producer.irrigacao === irrigated ? producer : null\r\n        )\r\n        .filter((producer: Producer) =>\r\n          producer.cultivo_protegido === coveredPlanting ? producer : null\r\n        )\r\n        .filter((producer: Producer) => {\r\n          return filterCommercializations.map((item) =>\r\n            producer.comercializacao.indexOf(item) > -1 ? producer : null\r\n          );\r\n        });\r\n\r\n      // Livestock Filter\r\n      let producersWithLivestockFilter = producersWithProducts\r\n        .map((producer: Producer) => {\r\n          let newProducts = producer.produtos.filter(\r\n            (product: Product) =>\r\n              filterLivestocks.includes(product.name) === true\r\n          );\r\n          return { ...producer, produtos: newProducts };\r\n        })\r\n        .filter((producer: Producer) => producer.produtos.length > 0)\r\n        .filter((producer: Producer) =>\r\n          filterCommercializations.map((item) =>\r\n            producer.comercializacao.includes(item)\r\n          )\r\n        );\r\n\r\n      // Livestock and Production Filter\r\n      let producersLivestockAndProduction = producersWithProductionFilter.concat(\r\n        producersWithLivestockFilter\r\n      );\r\n\r\n      // Livestock and Month Filter\r\n      let producersWithMonthFilter = producersWithProductionFilter.filter(\r\n        (producer: Producer) => {\r\n          // Products With Month Filter\r\n          let productsWithMonthFilter = producer.produtos.filter(\r\n            (product: Product) => {\r\n              // Month with Positive Production\r\n              let monthsWithProduction = product.months.filter(\r\n                (month) => month.total > 0\r\n              );\r\n              // Filtered Based on the Filter\r\n              let filteredProducts = monthsWithProduction\r\n                .map((production) =>\r\n                  filterMonths.includes(production.month) === true\r\n                    ? product\r\n                    : null\r\n                )\r\n                .filter((product) => product);\r\n\r\n              return filteredProducts.length > 0 ? product : null;\r\n            }\r\n          );\r\n          // console.log(\"productsWithMonthFilter: \", productsWithMonthFilter);\r\n          return { ...producer, produtos: productsWithMonthFilter };\r\n        }\r\n      );\r\n\r\n      // Structure Filter\r\n      let highlightersWithStructureFilter = dbHighlighter.filter(\r\n        (highlighter: Highlighter) => {\r\n          return filterStructures.includes(highlighter.type) === true\r\n            ? highlighter\r\n            : null;\r\n        }\r\n      );\r\n      // console.log(\"Filter: \", highlightersWithStructureFilter);\r\n\r\n      setHighlighters(highlightersWithStructureFilter);\r\n      setProducers(producersLivestockAndProduction);\r\n    }\r\n  }, [\r\n    commercializations,\r\n    coveredPlanting,\r\n    dbHighlighter,\r\n    dbProducers,\r\n    dbProducts,\r\n    irrigated,\r\n    livestocks,\r\n    months,\r\n    productions,\r\n    structures,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={(event: FormEvent) => {\r\n          event.preventDefault();\r\n          handleSubmitSearchForm();\r\n        }}\r\n      >\r\n        <fieldset className=\"uk-fieldset\">\r\n          <legend className=\"uk-legend\">\r\n            <strong>Selecione o que você procura:</strong>\r\n          </legend>\r\n\r\n          <div\r\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid uk-grid-stack\"\r\n            uk-grid=\"\"\r\n          >\r\n            <div className=\"uk-width-expand uk-first-column\">\r\n              <Select\r\n                name=\"structures\"\r\n                placeholder=\"Selecione a estrutura geográfica...\"\r\n                isMultiple={true}\r\n                value={structures}\r\n                options={data.geographic_structure}\r\n                // onChange={setStructures}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setStructures(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"uk-width-1-2@s uk-grid-margin uk-first-column\">\r\n              <Select\r\n                name=\"months\"\r\n                placeholder=\"Selecione a sazonalidade...\"\r\n                isMultiple={true}\r\n                value={months}\r\n                options={data.months}\r\n                // onChange={setMonths}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setMonths(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid\"\r\n            uk-grid=\"\"\r\n          >\r\n            <div className=\"uk-width-expand uk-first-column\">\r\n              <Select\r\n                name=\"livestocks\"\r\n                placeholder=\"Selecione a pecuária...\"\r\n                isMultiple={true}\r\n                value={livestocks}\r\n                options={data.livestock}\r\n                // onChange={setLivestocks}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setLivestocks(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"uk-width-expand\">\r\n              <div id=\"filter_producao\">\r\n                <Select\r\n                  name=\"productions\"\r\n                  placeholder=\"Selecione os gêneros alimentícios...\"\r\n                  isMultiple={true}\r\n                  value={productions}\r\n                  options={data.production}\r\n                  // onChange={setProductions}\r\n                  onChange={(selectedOption: ValueType<OptionType>) => {\r\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                    const value = (selectedOption as OptionType).value;\r\n\r\n                    setProductions(\r\n                      selectedOption?.map((selected: OptionType) => selected)\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid\"\r\n            uk-grid=\"\"\r\n          >\r\n            <div className=\"uk-width-1-2@s uk-first-column\">\r\n              <Select\r\n                name=\"commercializations\"\r\n                placeholder=\"Selecione os canais de comercialização...\"\r\n                isMultiple={true}\r\n                value={commercializations}\r\n                options={data.commercialization}\r\n                // onChange={setCommercializations}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setCommercializations(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"uk-width-1-2@s uk-grid-margin uk-first-column\">\r\n              <div className=\"uk-child-width-expand uk-grid\" uk-grid=\"\">\r\n                <div className=\"uk-first-column\">\r\n                  <Checkbox\r\n                    name=\"coveredPlanting\"\r\n                    label=\"Plantio coberto\"\r\n                    checked={coveredPlanting}\r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                      setCoveredPlanting(event.target.checked);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Checkbox\r\n                    name=\"irrigated\"\r\n                    label=\"Irrigação\"\r\n                    checked={irrigated}\r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                      setIrrigated(event.target.checked);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"uk-width-expand uk-grid-margin uk-first-column\">\r\n              <Button type=\"submit\" label=\"Filtrar\" />\r\n            </div>\r\n            <div className=\"uk-width-auto uk-grid-margin\">\r\n              <Link\r\n                to=\"#\"\r\n                className=\"uk-button uk-button-default uk-button-large uk-icon-link uk-icon\"\r\n                uk-icon=\"icon: close; ratio: 2\"\r\n                onClick={handleClearSearchForm}\r\n              />\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignContent: \"center\",\r\n        }}\r\n      >\r\n        <GoogleMap producers={producers} highlighters={highlighters} />\r\n\r\n        <LeafletMap producers={producers} highlighters={highlighters} />\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      {producers &&\r\n        producers.map((producer: Producer, index: number) => (\r\n          <Table key={index} data={producer} />\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormSearch;\r\n","import { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\n// Credentials\r\nimport credentials from \"../credentials/google-sheets-api.json\";\r\n\r\nconst doc = new GoogleSpreadsheet(\r\n  process.env.REACT_APP_GOOGLE_SPREADSHEET as string\r\n);\r\n\r\ndoc.useServiceAccountAuth({\r\n  client_email: credentials.client_email,\r\n  private_key: credentials.private_key,\r\n  // client_email: process.env.REACT_APP_GOOGLE_CLIENT_EMAIL as string,\r\n  // private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY as string\r\n});\r\n\r\nexport { doc };\r\n","import { doc } from \"../../services/google.spreadsheets\";\r\nimport { Product } from \"../Product\";\r\n\r\n// API\r\n// import api from \"../../services/api\";\r\n\r\n// Props\r\nexport interface Producer {\r\n  id: number;\r\n  data_atualizacao: string;\r\n  tipo: string;\r\n  nome: string;\r\n  proprietario: string;\r\n  inscricao_estadual: string;\r\n  empregados: string;\r\n  area_total: string;\r\n  area_de_horta: string;\r\n  area_de_pomar: string;\r\n  irrigacao: boolean;\r\n  cultivo_protegido: boolean;\r\n  veiculos: number;\r\n  comercializacao: string[];\r\n  latitude: number;\r\n  longitude: number;\r\n  produtos: Product[];\r\n}\r\n\r\n// const URL_PRODUCERS = `${api.URL_BACKEND}/producers`;\r\n\r\nconst getAll = async () => {\r\n  await doc.loadInfo(); // loads document properties and worksheets\r\n  // console.log(doc.title);\r\n  // console.log(doc);\r\n\r\n  const sheet = doc.sheetsByIndex[0];\r\n  const rows = await sheet.getRows();\r\n  const itens = rows.map(\r\n    ({\r\n      ID,\r\n      DataAtualização,\r\n      Tipo,\r\n      Nome,\r\n      Proprietário,\r\n      InscriçãoEstadual,\r\n      Empregados,\r\n      AreaTotal,\r\n      AreaDeHorta,\r\n      AreaDePomar,\r\n      Irrigação,\r\n      CultivoProtegido,\r\n      Veiculos,\r\n      Comercialização,\r\n      Latitude,\r\n      Longitude,\r\n    }) => {\r\n      return {\r\n        id: ID,\r\n        data_atualizacao: DataAtualização,\r\n        tipo: Tipo,\r\n        nome: Nome,\r\n        proprietario: Proprietário,\r\n        inscricao_estadual: InscriçãoEstadual,\r\n        empregados: Empregados,\r\n        area_total: AreaTotal,\r\n        area_de_horta: AreaDeHorta,\r\n        area_de_pomar: AreaDePomar,\r\n        irrigacao: Irrigação === \"1\" ? true : false,\r\n        cultivo_protegido: CultivoProtegido === \"1\" ? true : false,\r\n        veiculos: Veiculos,\r\n        comercializacao: Comercialização.replaceAll(' ', '').split(','),\r\n        latitude: parseFloat(Latitude),\r\n        longitude: parseFloat(Longitude),\r\n      };\r\n    }\r\n  );\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  // itens.map((item) => {\r\n  //   create(item);\r\n  // });\r\n\r\n  return itens;\r\n};\r\n\r\n// const getAll = async () => {\r\n//   return fetch(`${URL_PRODUCERS}?_embed=products`).then(async (response) => {\r\n//     if (response.ok) {\r\n//       const resposta = await response.json();\r\n//       return resposta;\r\n//     }\r\n\r\n//     throw new Error(\"Não foi possível pegar os dados\");\r\n//   });\r\n// };\r\n\r\n// const create = async (producer: Producer) => {\r\n//   const response = await fetch(`${URL_PRODUCERS}`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-type\": \"application/json\",\r\n//     },\r\n\r\n//     body: JSON.stringify(producer),\r\n//   });\r\n\r\n//   return response.status;\r\n//   // if (response.ok) {\r\n//   //   const resposta = await response.json();\r\n//   //   return resposta;\r\n//   // }\r\n//   // throw new Error(\"Não foi possível cadastrar os dados\");\r\n// };\r\n\r\nexport default { getAll };\r\n","import { doc } from \"../../services/google.spreadsheets\";\r\n\r\n// Props\r\nexport interface ProductionOfTheMonth {\r\n  month: string;\r\n  total: number;\r\n}\r\n\r\nexport interface Product {\r\n  producerId: number;\r\n  name: string;\r\n  year: number;\r\n  months: ProductionOfTheMonth[];\r\n  jan: number;\r\n  fev: number;\r\n  mar: number;\r\n  abr: number;\r\n  mai: number;\r\n  jun: number;\r\n  jul: number;\r\n  ago: number;\r\n  set: number;\r\n  out: number;\r\n  nov: number;\r\n  dez: number;\r\n  total: number;\r\n}\r\n\r\nconst getAll = async () => {\r\n  await doc.loadInfo(); // loads document properties and worksheets\r\n  //   console.log(doc.title);\r\n\r\n  const sheet = doc.sheetsByIndex[1];\r\n  const rows = await sheet.getRows();\r\n  const itens = rows.map(\r\n    ({\r\n      Produtor,\r\n      Produto,\r\n      Ano,\r\n      Janeiro,\r\n      Fevereiro,\r\n      Março,\r\n      Abril,\r\n      Maio,\r\n      Junho,\r\n      Julho,\r\n      Agosto,\r\n      Setembro,\r\n      Outubro,\r\n      Novembro,\r\n      Dezembro,\r\n      Total\r\n    }) => {\r\n      return {\r\n        producerId: Produtor,\r\n        name: Produto,\r\n        year: Ano,\r\n        months: [\r\n          { month: \"jan\", total: Janeiro },\r\n          { month: \"fev\", total: Fevereiro },\r\n          { month: \"mar\", total: Março },\r\n          { month: \"abr\", total: Abril },\r\n          { month: \"mai\", total: Maio },\r\n          { month: \"jun\", total: Junho },\r\n          { month: \"jul\", total: Julho },\r\n          { month: \"ago\", total: Agosto },\r\n          { month: \"set\", total: Setembro },\r\n          { month: \"out\", total: Outubro },\r\n          { month: \"nov\", total: Novembro },\r\n          { month: \"dez\", total: Dezembro },\r\n        ],\r\n        jan: Janeiro,\r\n        fev: Fevereiro,\r\n        mar: Março,\r\n        abr: Abril,\r\n        mai: Maio,\r\n        jun: Junho,\r\n        jul: Julho,\r\n        ago: Agosto,\r\n        set: Setembro,\r\n        out: Outubro,\r\n        nov: Novembro,\r\n        dez: Dezembro,\r\n        total: Total\r\n      };\r\n    }\r\n  );\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  // itens.map((item) => {\r\n  //   create(item);\r\n  // });\r\n\r\n  return itens;\r\n};\r\n\r\n// const create = async (product: Product) => {\r\n//   const response = await fetch(`http://localhost:8000/products`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify(product),\r\n//   });\r\n\r\n//   return response.status;\r\n//   if (response.ok) {\r\n//     const resposta = await response.json();\r\n//     return resposta;\r\n//   }\r\n//   throw new Error(\"Não foi possível cadastrar os dados\");\r\n// };\r\n\r\nexport default { getAll };\r\n","import { doc } from \"../../services/google.spreadsheets\";\r\n\r\n// Props\r\nexport interface Highlighter {\r\n  id: number;\r\n  type: string;\r\n  name: string;\r\n  lat: number;\r\n  lng: number;\r\n  description: string;\r\n  icon: number;\r\n}\r\n\r\nconst getIcon = (type: string) => {\r\n  if (type === \"Ponte\") {\r\n    return 0;\r\n  } else if (type === \"Serviço\") {\r\n    return 1;\r\n  } else if (type === \"Mata-burro\") {\r\n    return 2;\r\n  } else if (type === \"Porteira\") {\r\n    return 3;\r\n  } else if (type === \"Silo\") {\r\n    return 4;\r\n  } else if (type === \"Tanque\") {\r\n    return 5;\r\n  } else if (type === \"Represa\") {\r\n    return 6;\r\n  } else if (type === \"Agroindústria\") {\r\n    return 7;\r\n  }\r\n};\r\n\r\nconst getAll = async () => {\r\n  await doc.loadInfo(); // loads document properties and worksheets\r\n  //   console.log(doc.title);\r\n\r\n  const sheet = doc.sheetsByIndex[2];\r\n  const rows = await sheet.getRows();\r\n  const itens = rows.map(\r\n    ({ ID, Tipo, Nome, Latitude, Longitude, Descrição }) => {\r\n      return {\r\n        id: ID,\r\n        type: Tipo,\r\n        name: Nome,\r\n        lat: parseFloat(Latitude),\r\n        lng: parseFloat(Longitude),\r\n        description: Descrição,\r\n        icon: getIcon(Tipo),\r\n      };\r\n    }\r\n  );\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  // itens.map((item) => {\r\n  //   create(item);\r\n  // });\r\n\r\n  return itens;\r\n};\r\n\r\n// const create = async (highlighter: Highlighter) => {\r\n//   const response = await fetch(`http://localhost:8000/highlighters`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify(highlighter),\r\n//   });\r\n\r\n//   return response.status;\r\n//   if (response.ok) {\r\n//     const resposta = await response.json();\r\n//     return resposta;\r\n//   }\r\n//   throw new Error(\"Não foi possível cadastrar os dados\");\r\n// };\r\n\r\nexport default { getAll };\r\n","import { doc } from \"../../services/google.spreadsheets\";\r\n\r\n// Props\r\nexport interface Georeferencing {\r\n  id: number;\r\n  name: string;\r\n  owner: string;\r\n  area: string;\r\n  coordinates: string;\r\n}\r\n\r\nconst getAll = async () => {\r\n  await doc.loadInfo(); // loads document properties and worksheets\r\n  //   console.log(doc.title);\r\n\r\n  const sheet = doc.sheetsByIndex[3];\r\n  const rows = await sheet.getRows();\r\n  const itens = rows.map(({ ID, Nome, Proprietário, Área, Coordenadas }) => {\r\n    // coordinateRepository.create(ID, Coordenadas);\r\n\r\n    return {\r\n      id: ID,\r\n      name: Nome,\r\n      owner: Proprietário,\r\n      area: Área,\r\n      coordinates: Coordenadas.replaceAll('\"', '')\r\n    };\r\n  });\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  // itens.map((item) => {\r\n  //   create(item);\r\n  // });\r\n\r\n  return itens;\r\n};\r\n\r\n// const create = async (georeferencing: Georeferencing) => {\r\n//   const response = await fetch(`http://localhost:8000/georeferencing`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify(georeferencing),\r\n//   });\r\n//   return response.status;\r\n//   if (response.ok) {\r\n//     const resposta = await response.json();\r\n//     return resposta;\r\n//   }\r\n//   throw new Error(\"Não foi possível cadastrar os dados\");\r\n// };\r\n\r\nexport default { getAll };\r\n","import React, { useEffect } from \"react\";\r\n// import api from \"../../services/api-axios\";\r\n\r\n// Layout\r\nimport Default from \"../Layouts/Default\";\r\n\r\n// Components\r\nimport FormSearch from \"../../components/FormSearch\";\r\n\r\n// Repositories\r\nimport producerRepository from \"../../repositories/Producer\";\r\nimport productRepository from \"../../repositories/Product\";\r\nimport highlighterRepository from \"../../repositories/Highlighter\";\r\nimport georeferencingRepository from \"../../repositories/Georeferencing\";\r\n\r\nfunction Home() {\r\n  // Load Data From Google Spreadsheets\r\n  useEffect(() => {\r\n    const loadDataSpreadsheetsFromGoogle = () => {\r\n      productRepository\r\n        .getAll()\r\n        .then((response) => {\r\n          sessionStorage.setItem(\"products\", JSON.stringify(response));\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"Produtos\");\r\n        });\r\n\r\n      producerRepository\r\n        .getAll()\r\n        .then((response) => {\r\n          sessionStorage.setItem(\"producers\", JSON.stringify(response));\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"Produtores\");\r\n        });\r\n\r\n      highlighterRepository\r\n        .getAll()\r\n        .then((response) => {\r\n          sessionStorage.setItem(\"highlighters\", JSON.stringify(response));\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"Marcadores\");\r\n        });\r\n\r\n      georeferencingRepository\r\n        .getAll()\r\n        .then((response) => {\r\n          sessionStorage.setItem(\"georeferencing\", JSON.stringify(response));\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"Georeferenciamento\");\r\n        });\r\n    };\r\n\r\n    const lastUpdate = sessionStorage.getItem(\"lastUpdate\");\r\n    const data = new Date();\r\n\r\n    if (lastUpdate) {\r\n      let dateFromStorage = Date.parse(JSON.parse(lastUpdate));\r\n      let actualDate = Date.parse(data.toISOString().split(\"T\")[0]);\r\n\r\n      if (actualDate > dateFromStorage) {\r\n        sessionStorage.clear();\r\n        loadDataSpreadsheetsFromGoogle();\r\n      }\r\n    } else {\r\n      sessionStorage.setItem(\r\n        \"lastUpdate\",\r\n        JSON.stringify(data.toISOString().split(\"T\")[0])\r\n      );\r\n      loadDataSpreadsheetsFromGoogle();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Default>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <FormSearch />\r\n        </div>\r\n      </section>\r\n    </Default>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/valorize-sua-cidade\" component={Home} exact />\r\n        <Route path=\"*\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Routes\nimport Routes from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}