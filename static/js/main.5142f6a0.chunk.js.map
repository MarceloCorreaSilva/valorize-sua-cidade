{"version":3,"sources":["components/Header/index.tsx","components/Footer/index.tsx","pages/Layouts/Default/index.tsx","components/Html/Button/index.tsx","components/Html/Checkbox/index.tsx","components/Html/Select/index.tsx","components/Html/Table/index.tsx","services/google.spreadsheets.ts","repositories/Producer/index.ts","repositories/Product/index.ts","repositories/Highlighter/index.ts","repositories/Georeferencing/index.ts","components/FormSearch/index.tsx","pages/Home/index.tsx","routes.tsx","index.tsx"],"names":["Header","className","style","background","process","Footer","Default","children","uk-height-viewport","Button","label","type","rest","fontSize","fontWeight","Checkbox","name","checked","onChange","display","verticalAlign","height","lineHeight","id","width","Select","placeholder","isMultiple","value","options","isMulti","theme","colors","primary25","borderRadius","Table","data","marginBottom","nome","proprietario","irrigacao","cultivo_protegido","veiculos","comercializacao","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","credentials","private_key","getAll","a","loadInfo","sheet","sheetsByIndex","getRows","rows","itens","map","data_atualizacao","tipo","inscricao_estadual","empregados","area_total","area_de_horta","area_de_pomar","latitude","longitude","Produtor","Produto","Ano","Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro","ID","Tipo","Nome","Latitude","Longitude","Descrição","owner","Proprietário","area","Área","coordinates","Coordenadas","replaceAll","FormSearch","useState","structures","setStructures","months","setMonths","livestocks","setLivestocks","productions","setProductions","commercializations","setCommercializations","coveredPlanting","setCoveredPlanting","irrigated","setIrrigated","producers","setProducers","setProducts","setHighlighter","setGeoreferencing","handleClearSearchForm","useCallback","handleSubmitSearchForm","producerRepository","then","response","console","log","productRepository","highlighterRepository","georeferencingRepository","onSubmit","event","preventDefault","uk-grid","geographic_structure","selectedOption","selected","livestock","production","commercialization","target","to","uk-icon","onClick","producer","index","key","Home","useEffect","Routes","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5142f6a0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <section\r\n      className=\"uk-section uk-section-small uk-section-primary\"\r\n      style={{ background: \"#305183\" }}\r\n    >\r\n      <div className=\"uk-container\">\r\n        <h2 className=\"uk-margin-remove uk-text-bold\">\r\n          Mapa de {process.env.REACT_APP_CITY_NAME}\r\n        </h2>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return <></>;\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport Header from \"../../../components/Header\";\r\nimport Footer from \"../../../components/Footer\";\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Default: React.FC<LayoutProps> = ({ children }) => {\r\n  return (\r\n    <div className=\"uk-offcanvas-content\">\r\n      <div uk-height-viewport=\"expand: true\">\r\n        <Header />\r\n\r\n        {children}\r\n\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Default;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\n\r\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  label: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ label, type, ...rest }) => {\r\n  return (\r\n    <button\r\n      type={type}\r\n      className=\"uk-button uk-button-primary uk-button-large uk-width-expand\"\r\n      {...rest}\r\n      style={{\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n      }}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { Button };\r\n","import React, { InputHTMLAttributes } from \"react\";\r\n\r\ninterface CheckboxProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  label: string;\r\n  checked: boolean;\r\n}\r\n\r\nconst Checkbox: React.FC<CheckboxProps> = ({\r\n  name,\r\n  label,\r\n  checked,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <label\r\n      style={{\r\n        display: \"block\",\r\n        verticalAlign: \"top\",\r\n        height: \"38px\",\r\n        lineHeight: \"38px\",\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n      }}\r\n    >\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        className=\"uk-checkbox\"\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={onChange}\r\n        style={{\r\n          width: \"38px\",\r\n          height: \"38px\",\r\n          // margin: \"0 auto\",\r\n          verticalAlign: \"bottom\",\r\n        }}\r\n      />{\" \"}\r\n      {label}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport { Checkbox };\r\n","import React from \"react\";\r\nimport ReactSelect, { Props, Theme } from \"react-select\";\r\n\r\nconst Select: React.FC<Props> = ({\r\n  name,\r\n  placeholder,\r\n  isMultiple,\r\n  value,\r\n  options,\r\n  onChange,\r\n}) => {\r\n  function customTheme(theme: Theme): Theme {\r\n    return {\r\n      ...theme,\r\n      colors: {\r\n        ...theme.colors,\r\n        primary25: \"#D3D3D3\",\r\n      },\r\n      borderRadius: 0,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-form-controls\">\r\n      <ReactSelect\r\n        id={name}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        isMulti={isMultiple}\r\n        value={value}\r\n        options={options}\r\n        onChange={onChange}\r\n        theme={customTheme}\r\n        // className=\"basic-multi-select\"\r\n        // classNamePrefix=\"select\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Select };\r\n","import React from \"react\";\r\n\r\n// Props\r\nexport interface TableProps {\r\n  data: {\r\n    id: number;\r\n    nome: string;\r\n    proprietario: string;\r\n    irrigacao: boolean;\r\n    cultivo_protegido: boolean;\r\n    veiculos: number;\r\n    comercializacao: string;\r\n    // products: {\r\n    //   name: string;\r\n    //   year: number;\r\n    //   jan: number;\r\n    //   fev: number;\r\n    //   mar: number;\r\n    //   abr: number;\r\n    //   mai: number;\r\n    //   jun: number;\r\n    //   jul: number;\r\n    //   ago: number;\r\n    //   set: number;\r\n    //   out: number;\r\n    //   nov: number;\r\n    //   dez: number;\r\n    // }[];\r\n  };\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ data }) => {\r\n  return (\r\n    <div className=\"uk-card uk-card-default\" style={{ marginBottom: \"25px\" }}>\r\n      <div className=\"uk-card-header\">\r\n        <h3 className=\"uk-card-title\">\r\n          {data.id} - {data.nome}\r\n        </h3>\r\n        <p>\r\n          <strong>Proprietário(a):</strong> {data.proprietario} /{\" \"}\r\n          <strong>Irrigado:</strong> {data.irrigacao === true ? \"Sim\" : \"Não\"} /{\" \"}\r\n          <strong>Cultivo protegido:</strong>{\" \"}\r\n          {data.cultivo_protegido === true ? \"Sim\" : \"Não\"} /{\" \"}\r\n          <strong>Veiculos:</strong> {data.veiculos} /{\" \"}\r\n          <strong>Comercialização:</strong> {data.comercializacao}\r\n        </p>\r\n      </div>\r\n      <div className=\"uk-card-body\">\r\n        <div className=\"uk-overflow-auto\">\r\n          <table className=\"uk-table uk-table-divider uk-table-small\">\r\n            <thead>\r\n              <tr>\r\n                <th>Produto</th>\r\n                <th>Ano</th>\r\n                <th>Jan</th>\r\n                <th>Fev</th>\r\n                <th>Mar</th>\r\n                <th>Abr</th>\r\n                <th>Mai</th>\r\n                <th>Jun</th>\r\n                <th>Jul</th>\r\n                <th>Ago</th>\r\n                <th>Set</th>\r\n                <th>Out</th>\r\n                <th>Nov</th>\r\n                <th>Dez</th>\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* {data.products &&\r\n                data.products.map((product, index) => (\r\n                  <tr key={index}>\r\n                    <td>{product.name}</td>\r\n                    <td>{product.year}</td>\r\n                    <td>{product.jan}</td>\r\n                    <td>{product.fev}</td>\r\n                    <td>{product.mar}</td>\r\n                    <td>{product.abr}</td>\r\n                    <td>{product.mai}</td>\r\n                    <td>{product.jun}</td>\r\n                    <td>{product.jul}</td>\r\n                    <td>{product.ago}</td>\r\n                    <td>{product.set}</td>\r\n                    <td>{product.out}</td>\r\n                    <td>{product.nov}</td>\r\n                    <td>{product.dez}</td>\r\n                    <td>100,00</td>\r\n                  </tr>\r\n                ))} */}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Table };\r\n","import { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\n// Credentials\r\nimport credentials from \"../credentials/google-sheets-api.json\";\r\n\r\nconst doc = new GoogleSpreadsheet(\r\n  process.env.REACT_APP_GOOGLE_SPREADSHEET as string\r\n);\r\n\r\ndoc.useServiceAccountAuth({\r\n  client_email: credentials.client_email,\r\n  private_key: credentials.private_key,\r\n  // client_email: process.env.REACT_APP_GOOGLE_CLIENT_EMAIL as string,\r\n  // private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY as string\r\n});\r\n\r\nexport { doc };\r\n","import { doc } from \"../../services/google.spreadsheets\";\r\n\r\n// API\r\n// import api from \"../../services/api\";\r\n\r\n// Props\r\nexport interface Producer {\r\n  id: number;\r\n  data_atualizacao: string;\r\n  tipo: string;\r\n  nome: string;\r\n  proprietario: string;\r\n  inscricao_estadual: string;\r\n  empregados: string;\r\n  area_total: string;\r\n  area_de_horta: string;\r\n  area_de_pomar: string;\r\n  irrigacao: boolean;\r\n  cultivo_protegido: boolean;\r\n  veiculos: number;\r\n  comercializacao: string;\r\n  latitude: string;\r\n  longitude: string;\r\n}\r\n\r\n// const URL_PRODUCERS = `${api.URL_BACKEND}/producers`;\r\n\r\nconst getAll = async () => {\r\n  await doc.loadInfo(); // loads document properties and worksheets\r\n  // console.log(doc.title);\r\n  // console.log(doc);\r\n\r\n  const sheet = doc.sheetsByIndex[0];\r\n  const rows = await sheet.getRows();\r\n  const itens = rows.map(\r\n    ({\r\n      id,\r\n      data_atualizacao,\r\n      tipo,\r\n      nome,\r\n      proprietario,\r\n      inscricao_estadual,\r\n      empregados,\r\n      area_total,\r\n      area_de_horta,\r\n      area_de_pomar,\r\n      irrigacao,\r\n      cultivo_protegido,\r\n      veiculos,\r\n      comercializacao,\r\n      latitude,\r\n      longitude,\r\n    }) => {\r\n      return {\r\n        id,\r\n        data_atualizacao,\r\n        tipo,\r\n        nome,\r\n        proprietario,\r\n        inscricao_estadual,\r\n        empregados,\r\n        area_total,\r\n        area_de_horta,\r\n        area_de_pomar,\r\n        irrigacao,\r\n        cultivo_protegido,\r\n        veiculos,\r\n        comercializacao,\r\n        latitude,\r\n        longitude,\r\n      } as Producer;\r\n    }\r\n  );\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  // itens.map((item) => {\r\n  //   create(item);\r\n  // });\r\n\r\n  return itens;\r\n};\r\n\r\n// const getAll = async () => {\r\n//   return fetch(`${URL_PRODUCERS}?_embed=products`).then(async (response) => {\r\n//     if (response.ok) {\r\n//       const resposta = await response.json();\r\n//       return resposta;\r\n//     }\r\n\r\n//     throw new Error(\"Não foi possível pegar os dados\");\r\n//   });\r\n// };\r\n\r\n// const create = async (producer: Producer) => {\r\n//   const response = await fetch(`${URL_PRODUCERS}`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-type\": \"application/json\",\r\n//     },\r\n\r\n//     body: JSON.stringify(producer),\r\n//   });\r\n\r\n//   return response.status;\r\n//   // if (response.ok) {\r\n//   //   const resposta = await response.json();\r\n//   //   return resposta;\r\n//   // }\r\n//   // throw new Error(\"Não foi possível cadastrar os dados\");\r\n// };\r\n\r\nexport default { getAll };\r\n","import { doc } from \"../../services/google.spreadsheets\";\r\n\r\n// Props\r\nexport interface Product {\r\n  producerId: number;\r\n  name: string;\r\n  year: number;\r\n  jan: number;\r\n  fev: number;\r\n  mar: number;\r\n  abr: number;\r\n  mai: number;\r\n  jun: number;\r\n  jul: number;\r\n  ago: number;\r\n  set: number;\r\n  out: number;\r\n  nov: number;\r\n  dez: number;\r\n}\r\n\r\nconst getAll = async () => {\r\n  await doc.loadInfo(); // loads document properties and worksheets\r\n  //   console.log(doc.title);\r\n\r\n  const sheet = doc.sheetsByIndex[1];\r\n  const rows = await sheet.getRows();\r\n  const itens = rows.map(\r\n    ({\r\n      Produtor,\r\n      Produto,\r\n      Ano,\r\n      Janeiro,\r\n      Fevereiro,\r\n      Março,\r\n      Abril,\r\n      Maio,\r\n      Junho,\r\n      Julho,\r\n      Agosto,\r\n      Setembro,\r\n      Outubro,\r\n      Novembro,\r\n      Dezembro,\r\n    }) => {\r\n      return {\r\n        'producerId': Produtor,\r\n        'name': Produto,\r\n        'year': Ano,\r\n        'jan': Janeiro,\r\n        'fev': Fevereiro,\r\n        'mar': Março,\r\n        'abr': Abril,\r\n        'mai': Maio,\r\n        'jun': Junho,\r\n        'jul': Julho,\r\n        'ago': Agosto,\r\n        'set': Setembro,\r\n        'out': Outubro,\r\n        'nov': Novembro,\r\n        'dez': Dezembro,\r\n      };\r\n    }\r\n  );\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  // itens.map((item) => {\r\n  //   create(item);\r\n  // });\r\n\r\n  return itens;\r\n};\r\n\r\n// const create = async (product: Product) => {\r\n//   const response = await fetch(`http://localhost:8000/products`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify(product),\r\n//   });\r\n\r\n//   return response.status;\r\n//   if (response.ok) {\r\n//     const resposta = await response.json();\r\n//     return resposta;\r\n//   }\r\n//   throw new Error(\"Não foi possível cadastrar os dados\");\r\n// };\r\n\r\nexport default { getAll };\r\n","import { doc } from \"../../services/google.spreadsheets\";\r\n\r\n// Props\r\nexport interface Highlighter {\r\n  id: number;\r\n  type: string;\r\n  name: string;\r\n  lat: string;\r\n  lng: string;\r\n  description: string;\r\n}\r\n\r\nconst getAll = async () => {\r\n  await doc.loadInfo(); // loads document properties and worksheets\r\n  //   console.log(doc.title);\r\n\r\n  const sheet = doc.sheetsByIndex[2];\r\n  const rows = await sheet.getRows();\r\n  const itens = rows.map(\r\n    ({ ID, Tipo, Nome, Latitude, Longitude, Descrição }) => {\r\n      return {\r\n        'id': ID,\r\n        'type': Tipo,\r\n        'name': Nome,\r\n        'lat': Latitude,\r\n        'lng': Longitude,\r\n        'description': Descrição,\r\n      };\r\n    }\r\n  );\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  // itens.map((item) => {\r\n  //   create(item);\r\n  // });\r\n\r\n  return itens;\r\n};\r\n\r\n// const create = async (highlighter: Highlighter) => {\r\n//   const response = await fetch(`http://localhost:8000/highlighters`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify(highlighter),\r\n//   });\r\n\r\n//   return response.status;\r\n//   if (response.ok) {\r\n//     const resposta = await response.json();\r\n//     return resposta;\r\n//   }\r\n//   throw new Error(\"Não foi possível cadastrar os dados\");\r\n// };\r\n\r\nexport default { getAll };\r\n","import { doc } from \"../../services/google.spreadsheets\";\r\n\r\n// Props\r\nexport interface Georeferencing {\r\n  id: number;\r\n  name: string;\r\n  owner: string;\r\n  area: string;\r\n  coordinates: string;\r\n}\r\n\r\nconst getAll = async () => {\r\n  await doc.loadInfo(); // loads document properties and worksheets\r\n  //   console.log(doc.title);\r\n\r\n  const sheet = doc.sheetsByIndex[3];\r\n  const rows = await sheet.getRows();\r\n  const itens = rows.map(({ ID, Nome, Proprietário, Área, Coordenadas }) => {\r\n    // coordinateRepository.create(ID, Coordenadas);\r\n\r\n    return {\r\n      id: ID,\r\n      name: Nome,\r\n      owner: Proprietário,\r\n      area: Área,\r\n      coordinates: Coordenadas.replaceAll('\"', '')\r\n    };\r\n  });\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  // itens.map((item) => {\r\n  //   create(item);\r\n  // });\r\n\r\n  return itens;\r\n};\r\n\r\n// const create = async (georeferencing: Georeferencing) => {\r\n//   const response = await fetch(`http://localhost:8000/georeferencing`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify(georeferencing),\r\n//   });\r\n//   return response.status;\r\n//   if (response.ok) {\r\n//     const resposta = await response.json();\r\n//     return resposta;\r\n//   }\r\n//   throw new Error(\"Não foi possível cadastrar os dados\");\r\n// };\r\n\r\nexport default { getAll };\r\n","import React, { useState, useCallback, FormEvent, ChangeEvent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ValueType, OptionTypeBase as OptionType } from \"react-select\";\r\n\r\n// Components\r\nimport { Select, Checkbox, Button, Table } from \"../Html\";\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport Map from \"../Map\";\r\n\r\n// Data\r\nimport data from \"../../data/data.json\";\r\n\r\n// Repositories\r\nimport producerRepository, { Producer } from \"../../repositories/Producer\";\r\nimport productRepository, { Product } from \"../../repositories/Product\";\r\nimport highlighterRepository, { Highlighter } from '../../repositories/Highlighter'\r\nimport georeferencingRepository, { Georeferencing } from '../../repositories/Georeferencing'\r\n\r\nfunction FormSearch() {\r\n  const [structures, setStructures] = useState([]);\r\n  const [months, setMonths] = useState([]);\r\n  const [livestocks, setLivestocks] = useState([]);\r\n  const [productions, setProductions] = useState([]);\r\n  const [commercializations, setCommercializations] = useState([]);\r\n  const [coveredPlanting, setCoveredPlanting] = useState(false);\r\n  const [irrigated, setIrrigated] = useState(false);\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [producers, setProducers] = useState<Producer[]>([]);\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [highlighter, setHighlighter] = useState<Highlighter[]>([]);\r\n  const [georeferencing, setGeoreferencing] = useState<Georeferencing[]>([]);\r\n\r\n  const handleClearSearchForm = useCallback(() => {\r\n    setStructures([]);\r\n    setMonths([]);\r\n    setLivestocks([]);\r\n    setProductions([]);\r\n    setCommercializations([]);\r\n    setCoveredPlanting(false);\r\n    setIrrigated(false);\r\n  }, []);\r\n\r\n  const handleSubmitSearchForm = useCallback(async () => {\r\n    producerRepository.getAll().then((response) => {\r\n      setProducers(response);\r\n      console.log('Produtores', response);\r\n    });\r\n\r\n    productRepository.getAll().then((response) => {\r\n      setProducts(response);\r\n      console.log('Produtos', response);\r\n    });\r\n\r\n    highlighterRepository.getAll().then((response) => {\r\n      setHighlighter(response);\r\n      console.log('Marcadores', response);\r\n    });\r\n\r\n    georeferencingRepository.getAll().then((response) => {\r\n      setGeoreferencing(response);\r\n      console.log('Georeferenciamento', response);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={(event: FormEvent) => {\r\n          event.preventDefault();\r\n          handleSubmitSearchForm();\r\n\r\n          // console.log(structures);\r\n        }}\r\n      >\r\n        <fieldset className=\"uk-fieldset\">\r\n          <legend className=\"uk-legend\">\r\n            <strong>Selecione o que você procura:</strong>\r\n          </legend>\r\n\r\n          <div\r\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid uk-grid-stack\"\r\n            uk-grid=\"\"\r\n          >\r\n            <div className=\"uk-width-expand uk-first-column\">\r\n              <Select\r\n                name=\"structures\"\r\n                placeholder=\"Selecione a estrutura geográfica...\"\r\n                isMultiple={true}\r\n                value={structures}\r\n                options={data.geographic_structure}\r\n                // onChange={setStructures}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setStructures(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"uk-width-1-2@s uk-grid-margin uk-first-column\">\r\n              <Select\r\n                name=\"months\"\r\n                placeholder=\"Selecione a sazonalidade...\"\r\n                isMultiple={true}\r\n                value={months}\r\n                options={data.months}\r\n                // onChange={setMonths}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setMonths(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid\"\r\n            uk-grid=\"\"\r\n          >\r\n            <div className=\"uk-width-expand uk-first-column\">\r\n              <Select\r\n                name=\"livestocks\"\r\n                placeholder=\"Selecione a pecuária...\"\r\n                isMultiple={true}\r\n                value={livestocks}\r\n                options={data.livestock}\r\n                // onChange={setLivestocks}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setLivestocks(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"uk-width-expand\">\r\n              <div id=\"filter_producao\">\r\n                <Select\r\n                  name=\"productions\"\r\n                  placeholder=\"Selecione os gêneros alimentícios...\"\r\n                  isMultiple={true}\r\n                  value={productions}\r\n                  options={data.production}\r\n                  // onChange={setProductions}\r\n                  onChange={(selectedOption: ValueType<OptionType>) => {\r\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                    const value = (selectedOption as OptionType).value;\r\n\r\n                    setProductions(\r\n                      selectedOption?.map((selected: OptionType) => selected)\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid\"\r\n            uk-grid=\"\"\r\n          >\r\n            <div className=\"uk-width-1-2@s uk-first-column\">\r\n              <Select\r\n                name=\"commercializations\"\r\n                placeholder=\"Selecione os canais de comercialização...\"\r\n                isMultiple={true}\r\n                value={commercializations}\r\n                options={data.commercialization}\r\n                // onChange={setCommercializations}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setCommercializations(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"uk-width-1-2@s uk-grid-margin uk-first-column\">\r\n              <div className=\"uk-child-width-expand uk-grid\" uk-grid=\"\">\r\n                <div className=\"uk-first-column\">\r\n                  <Checkbox\r\n                    name=\"coveredPlanting\"\r\n                    label=\"Plantio coberto\"\r\n                    checked={coveredPlanting}\r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                      setCoveredPlanting(event.target.checked);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Checkbox\r\n                    name=\"irrigated\"\r\n                    label=\"Irrigação\"\r\n                    checked={irrigated}\r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                      setIrrigated(event.target.checked);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"uk-width-expand uk-grid-margin uk-first-column\">\r\n              <Button type=\"submit\" label=\"Filtrar\" />\r\n            </div>\r\n            <div className=\"uk-width-auto uk-grid-margin\">\r\n              <Link\r\n                to=\"#\"\r\n                className=\"uk-button uk-button-default uk-button-large uk-icon-link uk-icon\"\r\n                uk-icon=\"icon: close; ratio: 2\"\r\n                onClick={handleClearSearchForm}\r\n              />\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n\r\n      <hr />\r\n\r\n      {/* <Map /> */}\r\n\r\n      {producers &&\r\n        producers.map((producer: Producer, index: number) => (\r\n          <Table key={index} data={producer} />\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormSearch;\r\n","import React, { useEffect } from \"react\";\r\n// import api from \"../../services/api-axios\";\r\n\r\n// Layout\r\nimport Default from \"../Layouts/Default\";\r\n\r\n// Components\r\nimport FormSearch from \"../../components/FormSearch\";\r\n\r\n// Repositories\r\n// import producerRepository from \"../../repositories/Producer\";\r\n// import productRepository from \"../../repositories/Product\";\r\n// import highlighterRepository from \"../../repositories/Highlighter\";\r\n// import georeferencingRepository from \"../../repositories/Georeferencing\";\r\n\r\nfunction Home() {\r\n  // async function downloadDataGoogleSpreadsheets() {\r\n  //   await producerRepository.loadData().then((res) => {\r\n  //     console.log(res);\r\n  //   });\r\n  //   await productRepository.getAll();\r\n  //   await highlighterRepository.getAll();\r\n  //   await georeferencingRepository.getAll();\r\n  // }\r\n\r\n  useEffect(() => {\r\n    // downloadDataGoogleSpreadsheets();\r\n    // accessSheet();\r\n\r\n    // api\r\n    //   .get(\"/\")\r\n    //   .then(function (response) {\r\n    //     // handle success\r\n    //     console.log(response.data);\r\n\r\n    //     response.data.sheets.map((item: any) => {\r\n    //       return console.log(item);\r\n    //     });\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     // handle error\r\n    //     console.log(error);\r\n    //   })\r\n    //   .then(function () {\r\n    //     // always executed\r\n    //   });\r\n  }, []);\r\n\r\n  return (\r\n    <Default>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <FormSearch />\r\n        </div>\r\n      </section>\r\n    </Default>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/valorize-sua-cidade\" component={Home} exact />\r\n        <Route path=\"*\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Routes\nimport Routes from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}