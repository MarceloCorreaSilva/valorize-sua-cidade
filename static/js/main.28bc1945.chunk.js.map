{"version":3,"sources":["components/Header/index.tsx","components/Footer/index.tsx","pages/Layouts/Default/index.tsx","components/Html/Button/index.tsx","components/Html/Checkbox/index.tsx","components/Html/Select/index.tsx","components/Html/Table/index.tsx","components/GoogleMaps/index.tsx","services/google.spreadsheets.ts","repositories/Producer/index.ts","repositories/Product/index.ts","repositories/Highlighter/index.ts","components/FormSearch/index.tsx","pages/Home/index.tsx","routes.tsx","index.tsx"],"names":["Header","className","style","background","process","Footer","Default","children","uk-height-viewport","Button","label","type","rest","fontSize","fontWeight","Checkbox","name","checked","onChange","display","verticalAlign","height","lineHeight","id","width","Select","placeholder","isMultiple","value","options","isMulti","theme","colors","primary25","borderRadius","Table","data","useState","produtos","products","marginBottom","nome","proprietario","irrigacao","cultivo_protegido","veiculos","comercializacao","join","map","product","index","key","year","jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez","total","React","memo","producers","highlighters","geojson","geoJSONOfTheMunicipality","onLoad","googleMapsApiKey","mapContainerStyle","center","lat","lng","zoom","coordinates","features","geometry","coordArr","Array","coordinate","push","path","strokeColor","strokeOpacity","strokeWeight","renderGeoJSONOfTheMunicipality","highlighter","title","position","producer","latitude","longitude","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","credentials","private_key","getAll","a","loadInfo","sheet","sheetsByIndex","getRows","rows","itens","ID","DataAtualização","Tipo","Nome","Proprietário","InscriçãoEstadual","Empregados","AreaTotal","AreaDeHorta","AreaDePomar","Irrigação","CultivoProtegido","Veiculos","Comercialização","Latitude","Longitude","data_atualizacao","tipo","inscricao_estadual","empregados","area_total","area_de_horta","area_de_pomar","replaceAll","split","parseFloat","Produtor","Produto","Ano","Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro","producerId","months","month","Total","Descrição","description","icon","FormSearch","structures","setStructures","setMonths","livestocks","setLivestocks","productions","setProductions","commercializations","setCommercializations","coveredPlanting","setCoveredPlanting","irrigated","setIrrigated","dbProducers","setDbProducers","dbProducts","setDbProducts","dbHighlighter","setDbHighlighter","setProducers","setHighlighters","useEffect","loadDataSpreadsheetsFromGoogle","productRepository","then","response","sessionStorage","setItem","JSON","stringify","catch","error","console","finally","log","producerRepository","highlighterRepository","lastUpdate","getItem","Date","dateFromStorage","parse","toISOString","clear","useCallback","newProducers","filter","handleClearSearchForm","handleSubmitSearchForm","producersWithProducts","length","filterCommercializations","item","filterLivestocks","filterProductions","filterMonths","filterStructures","producersWithProductionFilter","newProducts","includes","indexOf","producersWithLivestockFilter","producersLivestockAndProduction","concat","highlightersWithStructureFilter","productsWithMonthFilter","production","onSubmit","event","preventDefault","uk-grid","geographic_structure","selectedOption","selected","livestock","commercialization","target","to","uk-icon","onClick","Home","Routes","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28bc1945.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <section\r\n      className=\"uk-section uk-section-small uk-section-primary\"\r\n      style={{ background: \"#305183\" }}\r\n    >\r\n      <div className=\"uk-container\">\r\n        <h2 className=\"uk-margin-remove uk-text-bold\">\r\n          Mapa de {process.env.REACT_APP_CITY_NAME}\r\n        </h2>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return <></>;\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport Header from \"../../../components/Header\";\r\nimport Footer from \"../../../components/Footer\";\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Default: React.FC<LayoutProps> = ({ children }) => {\r\n  return (\r\n    <div className=\"uk-offcanvas-content\">\r\n      <div uk-height-viewport=\"expand: true\">\r\n        <Header />\r\n\r\n        {children}\r\n\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Default;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\n\r\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  label: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ label, type, ...rest }) => {\r\n  return (\r\n    <button\r\n      type={type}\r\n      className=\"uk-button uk-button-primary uk-button-large uk-width-expand\"\r\n      {...rest}\r\n      style={{\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n      }}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { Button };\r\n","import React, { InputHTMLAttributes } from \"react\";\r\n\r\ninterface CheckboxProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  label: string;\r\n  checked: boolean;\r\n}\r\n\r\nconst Checkbox: React.FC<CheckboxProps> = ({\r\n  name,\r\n  label,\r\n  checked,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <label\r\n      style={{\r\n        display: \"block\",\r\n        verticalAlign: \"top\",\r\n        height: \"38px\",\r\n        lineHeight: \"38px\",\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n      }}\r\n    >\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        className=\"uk-checkbox\"\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={onChange}\r\n        style={{\r\n          width: \"38px\",\r\n          height: \"38px\",\r\n          // margin: \"0 auto\",\r\n          verticalAlign: \"bottom\",\r\n        }}\r\n      />{\" \"}\r\n      {label}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport { Checkbox };\r\n","import React from \"react\";\r\nimport ReactSelect, { Props, Theme } from \"react-select\";\r\n\r\nconst Select: React.FC<Props> = ({\r\n  name,\r\n  placeholder,\r\n  isMultiple,\r\n  value,\r\n  options,\r\n  onChange,\r\n}) => {\r\n  function customTheme(theme: Theme): Theme {\r\n    return {\r\n      ...theme,\r\n      colors: {\r\n        ...theme.colors,\r\n        primary25: \"#D3D3D3\",\r\n      },\r\n      borderRadius: 0,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-form-controls\">\r\n      <ReactSelect\r\n        id={name}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        isMulti={isMultiple}\r\n        value={value}\r\n        options={options}\r\n        onChange={onChange}\r\n        theme={customTheme}\r\n        // className=\"basic-multi-select\"\r\n        // classNamePrefix=\"select\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Select };\r\n","import React, { useState } from \"react\";\r\n\r\n// Repositories\r\nimport { ProductionOfTheMonth } from \"../../../repositories/Product\";\r\n\r\n// Props\r\nexport interface TableProps {\r\n  data: {\r\n    id: number;\r\n    nome: string;\r\n    proprietario: string;\r\n    irrigacao: boolean;\r\n    cultivo_protegido: boolean;\r\n    veiculos: number;\r\n    comercializacao: string[];\r\n    produtos: {\r\n      name: string;\r\n      year: number;\r\n      months: ProductionOfTheMonth[];\r\n      jan: number;\r\n      fev: number;\r\n      mar: number;\r\n      abr: number;\r\n      mai: number;\r\n      jun: number;\r\n      jul: number;\r\n      ago: number;\r\n      set: number;\r\n      out: number;\r\n      nov: number;\r\n      dez: number;\r\n      total: number;\r\n    }[];\r\n  };\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ data }) => {\r\n  const [products] = useState(data.produtos);\r\n\r\n  return (\r\n    <div className=\"uk-card uk-card-default\" style={{ marginBottom: \"25px\" }}>\r\n      <div className=\"uk-card-header\">\r\n        <h3 className=\"uk-card-title\">\r\n          {data.id} - {data.nome}\r\n        </h3>\r\n        <p>\r\n          <strong>Proprietário(a):</strong> {data.proprietario} /{\" \"}\r\n          <strong>Irrigado:</strong> {data.irrigacao === true ? \"Sim\" : \"Não\"} /{\" \"}\r\n          <strong>Cultivo protegido:</strong>{\" \"}\r\n          {data.cultivo_protegido === true ? \"Sim\" : \"Não\"} /{\" \"}\r\n          <strong>Veiculos:</strong> {data.veiculos} /{\" \"}\r\n          <strong>Comercialização:</strong> {data.comercializacao.join(\", \")}\r\n        </p>\r\n      </div>\r\n      <div className=\"uk-card-body\">\r\n        <div className=\"uk-overflow-auto\">\r\n          <table\r\n            className=\"uk-table uk-table-divider uk-table-small\"\r\n            id=\"datatable\"\r\n            style={{\r\n              height: \"200px\",\r\n            }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Produto</th>\r\n                <th>Ano</th>\r\n                <th>Jan</th>\r\n                <th>Fev</th>\r\n                <th>Mar</th>\r\n                <th>Abr</th>\r\n                <th>Mai</th>\r\n                <th>Jun</th>\r\n                <th>Jul</th>\r\n                <th>Ago</th>\r\n                <th>Set</th>\r\n                <th>Out</th>\r\n                <th>Nov</th>\r\n                <th>Dez</th>\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products &&\r\n                products.map((product, index) => (\r\n                  <tr key={index}>\r\n                    <td>{product.name}</td>\r\n                    <td>{product.year}</td>\r\n                    <td>{product.jan}</td>\r\n                    <td>{product.fev}</td>\r\n                    <td>{product.mar}</td>\r\n                    <td>{product.abr}</td>\r\n                    <td>{product.mai}</td>\r\n                    <td>{product.jun}</td>\r\n                    <td>{product.jul}</td>\r\n                    <td>{product.ago}</td>\r\n                    <td>{product.set}</td>\r\n                    <td>{product.out}</td>\r\n                    <td>{product.nov}</td>\r\n                    <td>{product.dez}</td>\r\n                    <td>{product.total}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Table };\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  LoadScript,\r\n  Marker,\r\n  Polygon,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\n\r\n// Components || Interfaces\r\nimport { Producer } from \"../../repositories/Producer\";\r\nimport { Highlighter } from \"../../repositories/Highlighter\";\r\nimport { Georeferencing } from \"../../repositories/Georeferencing\";\r\n\r\n// Data\r\nimport geojson from \"../../data/geojson.json\";\r\n\r\ninterface Props {\r\n  producers: Producer[];\r\n  highlighters: Highlighter[];\r\n}\r\ninterface LatLng {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\nconst Map: React.FC<Props> = ({ producers, highlighters }) => {\r\n  const [geoJSONOfTheMunicipality, setGeoJSONOfTheMunicipality] = useState(geojson);\r\n\r\n  const renderGeoJSONOfTheMunicipality = () => {\r\n    let coordinates =\r\n      geoJSONOfTheMunicipality.features[0].geometry.coordinates[0];\r\n    let coordArr = Array<LatLng>();\r\n    coordinates.map((coordinate) =>\r\n      coordArr.push({ lat: coordinate[1], lng: coordinate[0] })\r\n    );\r\n    return (\r\n      <Polygon\r\n        path={coordArr}\r\n        options={{\r\n          strokeColor: \"#fc1e0d\",\r\n          strokeOpacity: 1,\r\n          strokeWeight: 2,\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderRegions = () => {\r\n    let geo = sessionStorage.getItem(\"georeferencing\");\r\n    let geo2 = JSON.parse(geo ? geo : \"\");\r\n\r\n    geo2.map((region: Georeferencing) => {\r\n      let geo = region.coordinates\r\n        .replace(/\\\\n/g, \"\\\\n\")\r\n        .replace(/\\\\'/g, \"\\\\'\")\r\n        .replace(/\\\\\"/g, '\\\\\"')\r\n        .replace(/\\\\&/g, \"\\\\&\")\r\n        .replace(/\\\\r/g, \"\\\\r\")\r\n        .replace(/\\\\t/g, \"\\\\t\")\r\n        .replace(/\\\\b/g, \"\\\\b\")\r\n        .replace(/\\\\f/g, \"\\\\f\");\r\n      let coordinates = JSON.parse(geo);\r\n      let coordArr = Array<LatLng>();\r\n      return console.log(geo);\r\n    });\r\n\r\n    let geo3 = geo2[0].coordinates\r\n      .replace(/\\\\n/g, \"\\\\n\")\r\n      .replace(/\\\\'/g, \"\\\\'\")\r\n      .replace(/\\\\\"/g, '\\\\\"')\r\n      .replace(/\\\\&/g, \"\\\\&\")\r\n      .replace(/\\\\r/g, \"\\\\r\")\r\n      .replace(/\\\\t/g, \"\\\\t\")\r\n      .replace(/\\\\b/g, \"\\\\b\")\r\n      .replace(/\\\\f/g, \"\\\\f\");\r\n\r\n    let geo4 = JSON.parse(geo3);\r\n\r\n    let coordinates = geo4;\r\n    let coordArr = Array<LatLng>();\r\n    coordinates.map((coordinate: LatLng) =>\r\n      coordArr.push({ lat: coordinate.lat, lng: coordinate.lng })\r\n    );\r\n\r\n    console.log(\"DEBUG: \", coordArr);\r\n\r\n    return (\r\n      <Polygon\r\n        path={coordArr}\r\n        options={{\r\n          strokeColor: \"#fc1e0d\",\r\n          strokeOpacity: 1,\r\n          strokeWeight: 2,\r\n        }}\r\n      />\r\n    );\r\n\r\n    // =========================================\r\n    // geoJSON.map((region: Georeferencing) => {\r\n    //   let coordinates = JSON.parse(region.coordinates);\r\n    //   let coordArr = Array<LatLng>();\r\n    //   coordinates.map((coordinate: LatLng) => coordArr.push({lat: coordinate.lat, lng: coordinate.lng}))\r\n\r\n    //   return (\r\n    //     <Polygon\r\n    //       path={coordArr}\r\n    //       options={{\r\n    //         strokeColor: \"#fc1e0d\",\r\n    //         strokeOpacity: 1,\r\n    //         strokeWeight: 2,\r\n    //       }}\r\n    //     />\r\n    //   );\r\n    // });\r\n    // console.log(coordinates);\r\n  };\r\n\r\n  const onLoad = (data: any) => {\r\n    // console.log(\"data: \", data);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_API_KEY}>\r\n      <GoogleMap\r\n        mapContainerStyle={{\r\n          width: \"100%\",\r\n          height: \"500px\",\r\n        }}\r\n        center={{\r\n          lat: -18.675444,\r\n          lng: -53.64186,\r\n        }}\r\n        zoom={9}\r\n      >\r\n        {renderGeoJSONOfTheMunicipality()}\r\n        {/* {renderRegions()} */}\r\n\r\n        {highlighters &&\r\n          highlighters.map((highlighter: Highlighter, key) => {\r\n            return (\r\n              <Marker\r\n                key={key}\r\n                title={highlighter.name}\r\n                onLoad={onLoad}\r\n                position={{\r\n                  lat: highlighter.lat,\r\n                  lng: highlighter.lng,\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n\r\n        {producers.map((producer: Producer, key) => (\r\n          <Marker\r\n            key={key}\r\n            title={producer.nome}\r\n            onLoad={onLoad}\r\n            position={{ lat: producer.latitude, lng: producer.longitude }}\r\n          />\r\n        ))}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default React.memo(Map);\r\n","import { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\n// Credentials\r\nimport credentials from \"../credentials/google-sheets-api.json\";\r\n\r\nconst doc = new GoogleSpreadsheet(\r\n  process.env.REACT_APP_GOOGLE_SPREADSHEET as string\r\n);\r\n\r\ndoc.useServiceAccountAuth({\r\n  client_email: credentials.client_email,\r\n  private_key: credentials.private_key,\r\n  // client_email: process.env.REACT_APP_GOOGLE_CLIENT_EMAIL as string,\r\n  // private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY as string\r\n});\r\n\r\nexport { doc };\r\n","import { doc } from \"../../services/google.spreadsheets\";\r\nimport { Product } from \"../Product\";\r\n\r\n// API\r\n// import api from \"../../services/api\";\r\n\r\n// Props\r\nexport interface Producer {\r\n  id: number;\r\n  data_atualizacao: string;\r\n  tipo: string;\r\n  nome: string;\r\n  proprietario: string;\r\n  inscricao_estadual: string;\r\n  empregados: string;\r\n  area_total: string;\r\n  area_de_horta: string;\r\n  area_de_pomar: string;\r\n  irrigacao: boolean;\r\n  cultivo_protegido: boolean;\r\n  veiculos: number;\r\n  comercializacao: string[];\r\n  latitude: number;\r\n  longitude: number;\r\n  produtos: Product[];\r\n}\r\n\r\n// const URL_PRODUCERS = `${api.URL_BACKEND}/producers`;\r\n\r\nconst getAll = async () => {\r\n  await doc.loadInfo(); // loads document properties and worksheets\r\n  // console.log(doc.title);\r\n  // console.log(doc);\r\n\r\n  const sheet = doc.sheetsByIndex[0];\r\n  const rows = await sheet.getRows();\r\n  const itens = rows.map(\r\n    ({\r\n      ID,\r\n      DataAtualização,\r\n      Tipo,\r\n      Nome,\r\n      Proprietário,\r\n      InscriçãoEstadual,\r\n      Empregados,\r\n      AreaTotal,\r\n      AreaDeHorta,\r\n      AreaDePomar,\r\n      Irrigação,\r\n      CultivoProtegido,\r\n      Veiculos,\r\n      Comercialização,\r\n      Latitude,\r\n      Longitude,\r\n    }) => {\r\n      return {\r\n        id: ID,\r\n        data_atualizacao: DataAtualização,\r\n        tipo: Tipo,\r\n        nome: Nome,\r\n        proprietario: Proprietário,\r\n        inscricao_estadual: InscriçãoEstadual,\r\n        empregados: Empregados,\r\n        area_total: AreaTotal,\r\n        area_de_horta: AreaDeHorta,\r\n        area_de_pomar: AreaDePomar,\r\n        irrigacao: Irrigação === \"1\" ? true : false,\r\n        cultivo_protegido: CultivoProtegido === \"1\" ? true : false,\r\n        veiculos: Veiculos,\r\n        comercializacao: Comercialização.replaceAll(' ', '').split(','),\r\n        latitude: parseFloat(Latitude),\r\n        longitude: parseFloat(Longitude),\r\n        produtos: []\r\n      };\r\n    }\r\n  );\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  // itens.map((item) => {\r\n  //   create(item);\r\n  // });\r\n\r\n  return itens;\r\n};\r\n\r\n// const getAll = async () => {\r\n//   return fetch(`${URL_PRODUCERS}?_embed=products`).then(async (response) => {\r\n//     if (response.ok) {\r\n//       const resposta = await response.json();\r\n//       return resposta;\r\n//     }\r\n\r\n//     throw new Error(\"Não foi possível pegar os dados\");\r\n//   });\r\n// };\r\n\r\n// const create = async (producer: Producer) => {\r\n//   const response = await fetch(`${URL_PRODUCERS}`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-type\": \"application/json\",\r\n//     },\r\n\r\n//     body: JSON.stringify(producer),\r\n//   });\r\n\r\n//   return response.status;\r\n//   // if (response.ok) {\r\n//   //   const resposta = await response.json();\r\n//   //   return resposta;\r\n//   // }\r\n//   // throw new Error(\"Não foi possível cadastrar os dados\");\r\n// };\r\n\r\nexport default { getAll };\r\n","import { doc } from \"../../services/google.spreadsheets\";\r\n\r\n// Props\r\nexport interface ProductionOfTheMonth {\r\n  month: string;\r\n  total: number;\r\n}\r\n\r\nexport interface Product {\r\n  producerId: number;\r\n  name: string;\r\n  year: number;\r\n  months: ProductionOfTheMonth[];\r\n  jan: number;\r\n  fev: number;\r\n  mar: number;\r\n  abr: number;\r\n  mai: number;\r\n  jun: number;\r\n  jul: number;\r\n  ago: number;\r\n  set: number;\r\n  out: number;\r\n  nov: number;\r\n  dez: number;\r\n  total: number;\r\n}\r\n\r\nconst getAll = async () => {\r\n  await doc.loadInfo(); // loads document properties and worksheets\r\n  //   console.log(doc.title);\r\n\r\n  const sheet = doc.sheetsByIndex[1];\r\n  const rows = await sheet.getRows();\r\n  const itens = rows.map(\r\n    ({\r\n      Produtor,\r\n      Produto,\r\n      Ano,\r\n      Janeiro,\r\n      Fevereiro,\r\n      Março,\r\n      Abril,\r\n      Maio,\r\n      Junho,\r\n      Julho,\r\n      Agosto,\r\n      Setembro,\r\n      Outubro,\r\n      Novembro,\r\n      Dezembro,\r\n      Total\r\n    }) => {\r\n      return {\r\n        producerId: Produtor,\r\n        name: Produto,\r\n        year: Ano,\r\n        months: [\r\n          { month: \"jan\", total: Janeiro },\r\n          { month: \"fev\", total: Fevereiro },\r\n          { month: \"mar\", total: Março },\r\n          { month: \"abr\", total: Abril },\r\n          { month: \"mai\", total: Maio },\r\n          { month: \"jun\", total: Junho },\r\n          { month: \"jul\", total: Julho },\r\n          { month: \"ago\", total: Agosto },\r\n          { month: \"set\", total: Setembro },\r\n          { month: \"out\", total: Outubro },\r\n          { month: \"nov\", total: Novembro },\r\n          { month: \"dez\", total: Dezembro },\r\n        ],\r\n        jan: Janeiro,\r\n        fev: Fevereiro,\r\n        mar: Março,\r\n        abr: Abril,\r\n        mai: Maio,\r\n        jun: Junho,\r\n        jul: Julho,\r\n        ago: Agosto,\r\n        set: Setembro,\r\n        out: Outubro,\r\n        nov: Novembro,\r\n        dez: Dezembro,\r\n        total: Total\r\n      };\r\n    }\r\n  );\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  // itens.map((item) => {\r\n  //   create(item);\r\n  // });\r\n\r\n  return itens;\r\n};\r\n\r\n// const create = async (product: Product) => {\r\n//   const response = await fetch(`http://localhost:8000/products`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify(product),\r\n//   });\r\n\r\n//   return response.status;\r\n//   if (response.ok) {\r\n//     const resposta = await response.json();\r\n//     return resposta;\r\n//   }\r\n//   throw new Error(\"Não foi possível cadastrar os dados\");\r\n// };\r\n\r\nexport default { getAll };\r\n","import { doc } from \"../../services/google.spreadsheets\";\r\n\r\n// Props\r\nexport interface Highlighter {\r\n  id: number;\r\n  type: string;\r\n  name: string;\r\n  lat: number;\r\n  lng: number;\r\n  description: string;\r\n  icon?: number;\r\n}\r\n\r\nconst getIcon = (type: string) => {\r\n  if (type === \"Ponte\") {\r\n    return 0;\r\n  } else if (type === \"Serviço\") {\r\n    return 1;\r\n  } else if (type === \"Mata-burro\") {\r\n    return 2;\r\n  } else if (type === \"Porteira\") {\r\n    return 3;\r\n  } else if (type === \"Silo\") {\r\n    return 4;\r\n  } else if (type === \"Tanque\") {\r\n    return 5;\r\n  } else if (type === \"Represa\") {\r\n    return 6;\r\n  } else if (type === \"Agroindústria\") {\r\n    return 7;\r\n  }\r\n};\r\n\r\nconst getAll = async () => {\r\n  await doc.loadInfo(); // loads document properties and worksheets\r\n  //   console.log(doc.title);\r\n\r\n  const sheet = doc.sheetsByIndex[2];\r\n  const rows = await sheet.getRows();\r\n  const itens = rows.map(\r\n    ({ ID, Tipo, Nome, Latitude, Longitude, Descrição }) => {\r\n      return {\r\n        id: ID,\r\n        type: Tipo,\r\n        name: Nome,\r\n        lat: parseFloat(Latitude),\r\n        lng: parseFloat(Longitude),\r\n        description: Descrição,\r\n        icon: getIcon(Tipo),\r\n      };\r\n    }\r\n  );\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  // itens.map((item) => {\r\n  //   create(item);\r\n  // });\r\n\r\n  return itens;\r\n};\r\n\r\n// const create = async (highlighter: Highlighter) => {\r\n//   const response = await fetch(`http://localhost:8000/highlighters`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify(highlighter),\r\n//   });\r\n\r\n//   return response.status;\r\n//   if (response.ok) {\r\n//     const resposta = await response.json();\r\n//     return resposta;\r\n//   }\r\n//   throw new Error(\"Não foi possível cadastrar os dados\");\r\n// };\r\n\r\nexport default { getAll };\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, {\r\n  useState,\r\n  useCallback,\r\n  FormEvent,\r\n  ChangeEvent,\r\n  useEffect,\r\n} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ValueType, OptionTypeBase as OptionType } from \"react-select\";\r\n\r\n// Components\r\nimport { Select, Checkbox, Button, Table } from \"../Html\";\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport GoogleMap from \"../GoogleMaps\";\r\nimport LeafletMap from \"../LeafletMaps\";\r\n\r\n// Data\r\nimport data from \"../../data/data.json\";\r\n\r\n// Repositories\r\nimport producerRepository, { Producer } from \"../../repositories/Producer\";\r\nimport productRepository, { Product } from \"../../repositories/Product\";\r\nimport highlighterRepository, { Highlighter } from \"../../repositories/Highlighter\";\r\n// import georeferencingRepository, { Georeferencing } from \"../../repositories/Georeferencing\";\r\n\r\ninterface Filter {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\nfunction FormSearch() {\r\n  // Filters\r\n  const [structures, setStructures] = useState<Filter[]>([]);\r\n  const [months, setMonths] = useState<Filter[]>([]);\r\n  const [livestocks, setLivestocks] = useState<Filter[]>([]);\r\n  const [productions, setProductions] = useState<Filter[]>([]);\r\n  const [commercializations, setCommercializations] = useState<Filter[]>([]);\r\n  const [coveredPlanting, setCoveredPlanting] = useState(false);\r\n  const [irrigated, setIrrigated] = useState(false);\r\n\r\n  // DB\r\n  const [dbProducers, setDbProducers] = useState<Producer[]>([]);\r\n  const [dbProducts, setDbProducts] = useState<Product[]>([]);\r\n  const [dbHighlighter, setDbHighlighter] = useState<Highlighter[]>([]);\r\n  // const [dbGeoreferencing, setDbGeoreferencing] = useState<Georeferencing[]>([]);\r\n\r\n  //\r\n  const [producers, setProducers] = useState<Producer[]>([]);\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [highlighters, setHighlighters] = useState<Highlighter[]>([]);\r\n  // const [georeferencing, setGeoreferencing] = useState<Georeferencing[]>([]);\r\n\r\n  // Load Data From Google Spreadsheets\r\n  useEffect(() => {\r\n    const loadDataSpreadsheetsFromGoogle = () => {\r\n      productRepository\r\n        .getAll()\r\n        .then((response) => {\r\n          setDbProducts(response);\r\n          sessionStorage.setItem(\"products\", JSON.stringify(response));\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"Produtos\");\r\n        });\r\n\r\n      producerRepository\r\n        .getAll()\r\n        .then((response) => {\r\n          setDbProducers(response);\r\n          sessionStorage.setItem(\"producers\", JSON.stringify(response));\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"Produtores\");\r\n        });\r\n\r\n      highlighterRepository\r\n        .getAll()\r\n        .then((response) => {\r\n          setDbHighlighter(response);\r\n          sessionStorage.setItem(\"highlighters\", JSON.stringify(response));\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"Marcadores\");\r\n        });\r\n\r\n      // georeferencingRepository\r\n      //   .getAll()\r\n      //   .then((response) => {\r\n      //     sessionStorage.setItem(\"georeferencing\", JSON.stringify(response));\r\n      //   })\r\n      //   .catch((error) => {\r\n      //     console.error(error);\r\n      //   })\r\n      //   .finally(() => {\r\n      //     console.log(\"Georeferenciamento\");\r\n      //   });\r\n    };\r\n\r\n    const lastUpdate = sessionStorage.getItem(\"lastUpdate\");\r\n    const data = new Date();\r\n\r\n    if (lastUpdate) {\r\n      let dateFromStorage = Date.parse(JSON.parse(lastUpdate));\r\n      let actualDate = Date.parse(data.toISOString().split(\"T\")[0]);\r\n\r\n      if (actualDate > dateFromStorage) {\r\n        sessionStorage.clear();\r\n        loadDataSpreadsheetsFromGoogle();\r\n      }\r\n    } else {\r\n      sessionStorage.setItem(\r\n        \"lastUpdate\",\r\n        JSON.stringify(data.toISOString().split(\"T\")[0])\r\n      );\r\n      loadDataSpreadsheetsFromGoogle();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const producers = sessionStorage.getItem(\"producers\");\r\n    if (producers) {\r\n      setDbProducers(JSON.parse(producers));\r\n      // setProducers(JSON.parse(producers));\r\n    }\r\n\r\n    const products = sessionStorage.getItem(\"products\");\r\n    if (products) {\r\n      setDbProducts(JSON.parse(products));\r\n    }\r\n\r\n    const highlighters = sessionStorage.getItem(\"highlighters\");\r\n    if (highlighters) {\r\n      setDbHighlighter(JSON.parse(highlighters));\r\n      // setHighlighters(JSON.parse(highlighters));\r\n    }\r\n\r\n    // const georeferencing = sessionStorage.getItem(\"georeferencing\");\r\n    // if (georeferencing) {\r\n    //   setGeoreferencing(JSON.parse(georeferencing));\r\n    // }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // const script = document.createElement(\"script\");\r\n    // script.src = \"js/content.js\";\r\n    // script.async = true;\r\n    // document.body.appendChild(script);\r\n  }, []);\r\n\r\n  // Load Producer Specific Products\r\n  const loadSpecificProductsFromProducers = useCallback(() => {\r\n    let newProducers = dbProducers.map((producer: Producer) => {\r\n      return {\r\n        ...producer,\r\n        produtos: dbProducts.filter(\r\n          (product: Product) => product.producerId === producer.id\r\n        ),\r\n      };\r\n    });\r\n\r\n    setProducers(newProducers);\r\n  }, [dbProducers, dbProducts]);\r\n\r\n  // Performs Query Based On Filters\r\n  const performsQueryBasedOnFilters = useCallback(() => {}, []);\r\n\r\n  // Clear Search Form\r\n  const handleClearSearchForm = useCallback(() => {\r\n    setStructures([]);\r\n    setMonths([]);\r\n    setLivestocks([]);\r\n    setProductions([]);\r\n    setCommercializations([]);\r\n    setCoveredPlanting(false);\r\n    setIrrigated(false);\r\n\r\n    setProducers([]);\r\n  }, []);\r\n\r\n  // Submit Search Form\r\n  const handleSubmitSearchForm = useCallback(() => {\r\n    // loadSpecificProductsFromProducers();\r\n    let producersWithProducts = dbProducers.map((producer: Producer) => {\r\n      return {\r\n        ...producer,\r\n        produtos: dbProducts.filter(\r\n          (product: Product) => product.producerId === producer.id\r\n        ),\r\n      };\r\n    });\r\n\r\n    if (\r\n      structures.length === 0 &&\r\n      livestocks.length === 0 &&\r\n      commercializations.length === 0 &&\r\n      months.length === 0 &&\r\n      productions.length === 0 &&\r\n      coveredPlanting === false &&\r\n      irrigated === false\r\n    ) {\r\n      setProducers(producersWithProducts);\r\n      setHighlighters(dbHighlighter);\r\n    } else {\r\n      // List filters\r\n      let filterCommercializations: any[] = [];\r\n      if (commercializations && commercializations.length > 0) {\r\n        filterCommercializations = commercializations.map((item) => item.value);\r\n        // console.log(filterCommercializations);\r\n      }\r\n\r\n      let filterLivestocks: any[] = [];\r\n      if (livestocks && livestocks.length > 0) {\r\n        livestocks.map((item) => filterLivestocks.push(item.value));\r\n        // console.log(filterLivestocks);\r\n      }\r\n\r\n      let filterProductions: any[] = [];\r\n      if (productions && productions.length > 0) {\r\n        productions.map((item) => filterProductions.push(item.value));\r\n        // console.log(filterProductions);\r\n      }\r\n\r\n      let filterMonths: any[] = [];\r\n      if (months && months.length > 0) {\r\n        filterMonths = months.map((item) => item.value);\r\n      }\r\n\r\n      let filterStructures: any[] = [];\r\n      if (structures && structures.length > 0) {\r\n        filterStructures = structures.map((item) => item.value);\r\n        // console.log(filterStructures);\r\n      }\r\n\r\n      // Production Filter\r\n      let producersWithProductionFilter = producersWithProducts\r\n        .map((producer: Producer) => {\r\n          let newProducts = producer.produtos.filter(\r\n            (product: Product) =>\r\n              filterProductions.includes(product.name) === true\r\n          );\r\n          return { ...producer, produtos: newProducts };\r\n        })\r\n        .filter((producer: Producer) => producer.produtos?.length > 0)\r\n        .filter((producer: Producer) =>\r\n          producer.irrigacao === irrigated ? producer : null\r\n        )\r\n        .filter((producer: Producer) =>\r\n          producer.cultivo_protegido === coveredPlanting ? producer : null\r\n        )\r\n        .filter((producer: Producer) => {\r\n          return filterCommercializations.map((item) =>\r\n            producer.comercializacao.indexOf(item) > -1 ? producer : null\r\n          );\r\n        });\r\n\r\n      // Livestock Filter\r\n      let producersWithLivestockFilter = producersWithProducts\r\n        .map((producer: Producer) => {\r\n          let newProducts = producer.produtos.filter(\r\n            (product: Product) =>\r\n              filterLivestocks.includes(product.name) === true\r\n          );\r\n          return { ...producer, produtos: newProducts };\r\n        })\r\n        .filter((producer: Producer) => producer.produtos.length > 0)\r\n        .filter((producer: Producer) =>\r\n          filterCommercializations.map((item) =>\r\n            producer.comercializacao.includes(item)\r\n          )\r\n        );\r\n\r\n      // Livestock and Production Filter\r\n      let producersLivestockAndProduction = producersWithProductionFilter.concat(\r\n        producersWithLivestockFilter\r\n      );\r\n\r\n      // Livestock and Month Filter\r\n      let producersWithMonthFilter = producersWithProductionFilter.filter(\r\n        (producer: Producer) => {\r\n          // Products With Month Filter\r\n          let productsWithMonthFilter = producer.produtos.filter(\r\n            (product: Product) => {\r\n              // Month with Positive Production\r\n              let monthsWithProduction = product.months.filter(\r\n                (month) => month.total > 0\r\n              );\r\n              // Filtered Based on the Filter\r\n              let filteredProducts = monthsWithProduction\r\n                .map((production) =>\r\n                  filterMonths.includes(production.month) === true\r\n                    ? product\r\n                    : null\r\n                )\r\n                .filter((product) => product);\r\n\r\n              return filteredProducts.length > 0 ? product : null;\r\n            }\r\n          );\r\n          // console.log(\"productsWithMonthFilter: \", productsWithMonthFilter);\r\n          return { ...producer, produtos: productsWithMonthFilter };\r\n        }\r\n      );\r\n\r\n      // Structure Filter\r\n      let highlightersWithStructureFilter = dbHighlighter.filter(\r\n        (highlighter: Highlighter) => {\r\n          return filterStructures.includes(highlighter.type) === true\r\n            ? highlighter\r\n            : null;\r\n        }\r\n      );\r\n      // console.log(\"Filter: \", highlightersWithStructureFilter);\r\n\r\n      setHighlighters(highlightersWithStructureFilter);\r\n      setProducers(producersLivestockAndProduction);\r\n    }\r\n  }, [\r\n    commercializations,\r\n    coveredPlanting,\r\n    dbHighlighter,\r\n    dbProducers,\r\n    dbProducts,\r\n    irrigated,\r\n    livestocks,\r\n    months,\r\n    productions,\r\n    structures,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={(event: FormEvent) => {\r\n          event.preventDefault();\r\n          handleSubmitSearchForm();\r\n        }}\r\n      >\r\n        <fieldset className=\"uk-fieldset\">\r\n          <legend className=\"uk-legend\">\r\n            <strong>Selecione o que você procura:</strong>\r\n          </legend>\r\n\r\n          <div\r\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid uk-grid-stack\"\r\n            uk-grid=\"\"\r\n          >\r\n            <div className=\"uk-width-expand uk-first-column\">\r\n              <Select\r\n                name=\"structures\"\r\n                placeholder=\"Selecione a estrutura geográfica...\"\r\n                isMultiple={true}\r\n                value={structures}\r\n                options={data.geographic_structure}\r\n                // onChange={setStructures}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setStructures(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"uk-width-1-2@s uk-grid-margin uk-first-column\">\r\n              <Select\r\n                name=\"months\"\r\n                placeholder=\"Selecione a sazonalidade...\"\r\n                isMultiple={true}\r\n                value={months}\r\n                options={data.months}\r\n                // onChange={setMonths}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setMonths(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid\"\r\n            uk-grid=\"\"\r\n          >\r\n            <div className=\"uk-width-expand uk-first-column\">\r\n              <Select\r\n                name=\"livestocks\"\r\n                placeholder=\"Selecione a pecuária...\"\r\n                isMultiple={true}\r\n                value={livestocks}\r\n                options={data.livestock}\r\n                // onChange={setLivestocks}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setLivestocks(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"uk-width-expand\">\r\n              <div id=\"filter_producao\">\r\n                <Select\r\n                  name=\"productions\"\r\n                  placeholder=\"Selecione os gêneros alimentícios...\"\r\n                  isMultiple={true}\r\n                  value={productions}\r\n                  options={data.production}\r\n                  // onChange={setProductions}\r\n                  onChange={(selectedOption: ValueType<OptionType>) => {\r\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                    const value = (selectedOption as OptionType).value;\r\n\r\n                    setProductions(\r\n                      selectedOption?.map((selected: OptionType) => selected)\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid\"\r\n            uk-grid=\"\"\r\n          >\r\n            <div className=\"uk-width-1-2@s uk-first-column\">\r\n              <Select\r\n                name=\"commercializations\"\r\n                placeholder=\"Selecione os canais de comercialização...\"\r\n                isMultiple={true}\r\n                value={commercializations}\r\n                options={data.commercialization}\r\n                // onChange={setCommercializations}\r\n                onChange={(selectedOption: ValueType<OptionType>) => {\r\n                  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                  const value = (selectedOption as OptionType).value;\r\n\r\n                  setCommercializations(\r\n                    selectedOption?.map((selected: OptionType) => selected)\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"uk-width-1-2@s uk-grid-margin uk-first-column\">\r\n              <div className=\"uk-child-width-expand uk-grid\" uk-grid=\"\">\r\n                <div className=\"uk-first-column\">\r\n                  <Checkbox\r\n                    name=\"coveredPlanting\"\r\n                    label=\"Plantio coberto\"\r\n                    checked={coveredPlanting}\r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                      setCoveredPlanting(event.target.checked);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Checkbox\r\n                    name=\"irrigated\"\r\n                    label=\"Irrigação\"\r\n                    checked={irrigated}\r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                      setIrrigated(event.target.checked);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"uk-width-expand uk-grid-margin uk-first-column\">\r\n              <Button type=\"submit\" label=\"Filtrar\" />\r\n            </div>\r\n            <div className=\"uk-width-auto uk-grid-margin\">\r\n              <Link\r\n                to=\"#\"\r\n                className=\"uk-button uk-button-default uk-button-large uk-icon-link uk-icon\"\r\n                uk-icon=\"icon: close; ratio: 2\"\r\n                onClick={handleClearSearchForm}\r\n              />\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n\r\n      <GoogleMap producers={producers} highlighters={highlighters} />\r\n      {/* <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignContent: \"center\",\r\n        }}\r\n      >\r\n        <LeafletMap producers={producers} highlighters={highlighters} />\r\n      </div> */}\r\n\r\n      <hr />\r\n\r\n      {producers &&\r\n        producers.map((producer: Producer, index: number) => (\r\n          <Table key={index} data={producer} />\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormSearch;\r\n","import React from \"react\";\r\n\r\n// Layout\r\nimport Default from \"../Layouts/Default\";\r\n\r\n// Components\r\nimport FormSearch from \"../../components/FormSearch\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <Default>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <FormSearch />\r\n        </div>\r\n      </section>\r\n    </Default>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/valorize-sua-cidade\" component={Home} exact />\r\n        <Route path=\"*\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Routes\nimport Routes from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}