{"version":3,"sources":["data/geodata lazy /^/.//.*/.json$/ groupOptions: {} namespace object","config/index.ts","components/Header/index.tsx","components/Footer/index.tsx","pages/Layouts/Default/index.tsx","components/Html/Button/index.tsx","components/Html/Checkbox/index.tsx","components/Html/Select/index.tsx","components/Html/Table/index.tsx","components/Maps/GoogleMaps.tsx","components/Maps/LeafletMaps.tsx","services/google.spreadsheets.ts","repositories/Product/index.ts","repositories/Producer/index.ts","repositories/Highlighter/index.ts","components/FormSearch/index.tsx","pages/Home/index.tsx","routes.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","app","name","process","getApp","city","lat","lng","coordinate","Number","getCity","useGoogleMaps","Boolean","google","apiKey","clientEmail","privateKey","spreadsheet","api_key","credentials","client_email","private_key","replaceAll","getGoogleApis","Header","className","style","background","config","Footer","Default","children","uk-height-viewport","Button","label","type","rest","fontSize","fontWeight","Checkbox","checked","onChange","display","verticalAlign","height","lineHeight","width","Select","placeholder","isMultiple","value","options","isMulti","theme","colors","primary25","borderRadius","Table","data","useState","products","marginBottom","owner","irrigated","covered_planting","vehicles","commercialization","join","product","index","key","year","jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez","total","React","memo","producers","highlighters","coordinates","properties","description","geometry","geoJSONOfTheMunicipality","setGeoJSONOfTheMunicipality","useEffect","a","municipality","features","loadGeoJSON","googleMapsApiKey","mapContainerStyle","opacity","center","zoom","coordArr","Array","push","path","strokeColor","strokeOpacity","strokeWeight","renderGeoJSONOfTheMunicipality","renderRegions","highlighter","title","onLoad","position","producer","LeafletMaps","default","TileLayer","attribution","url","GeoJSON","color","weight","Marker","Popup","Tooltip","doc","GoogleSpreadsheet","useServiceAccountAuth","getAll","loadInfo","sheet","sheetsByIndex","getRows","rows","itens","Produtor","Produto","Ano","Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro","Total","producerId","parseFloat","getProductsByProducerId","sessionProducts","JSON","parse","sessionStorage","getItem","filter","ID","DataAtualização","Tipo","Nome","Proprietário","InscriçãoEstadual","Empregados","AreaTotal","AreaDeHorta","AreaDePomar","Irrigação","CultivoProtegido","Veiculos","Comercialização","Latitude","Longitude","updated_at","state_registration","employees","total_area","vegetable_garden_area","orchard_area","split","productRepository","Descrição","icon","FormSearch","structures","setStructures","livestocks","setLivestocks","productions","setProductions","commercializations","setCommercializations","coveredPlanting","setCoveredPlanting","setIrrigated","setProducers","setHighlighters","sessionProducers","setSessionProducers","sessionHighlighters","setSessionHighlighters","response","setItem","stringify","catch","error","console","finally","log","producerRepository","highlighterRepository","loadDataSpreadsheetsFromGoogle","filterHighlighters","useCallback","filterStructures","length","item","includes","filterProducers","filterLivestocksAndProductions","producersLivestocksAndProductions","newProducts","filterCommercializations","producersCommercializations","producersIrrigatedOrCovered","handleClearSearchForm","handleSubmitSearchForm","onSubmit","event","preventDefault","uk-grid","geographic_structure","selectedOption","selected","livestock","production","target","to","uk-icon","onClick","Home","Routes","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3e3fd5b.chunk.js","sourcesContent":["var map = {\n\t\"./5003900.json\": [\n\t\t387,\n\t\t3\n\t],\n\t\"./5210109.json\": [\n\t\t388,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 115;\nmodule.exports = webpackAsyncContext;","const getApp = () => {\n  const name = process.env.REACT_APP_APP_NAME;\n  \n  return {\n    name: name ? name : \"\",\n  };\n};\n\nconst getCity = () => {\n  const name = process.env.REACT_APP_CITY_NAME;\n  const code = process.env.REACT_APP_CITY_MUNICIPALITY_CODE_AT_IBGE;\n  const lat = process.env.REACT_APP_CITY_LAT;\n  const lng = process.env.REACT_APP_CITY_LNG;\n\n  return {\n    name: name ? name : \"\",\n    code: code ? code : \"\",\n    coordinate: {\n      lat: lat ? Number(lat) : 0,\n      lng: lng ? Number(lng) : 0,\n    },\n  };\n};\n\nconst useGoogleMaps = () => {\n  const useGoogleMaps = process.env.REACT_APP_USE_GOOGLE_MAP;\n\n  return useGoogleMaps ? Boolean(useGoogleMaps) : false;\n};\n\nconst getGoogleApis = () => {\n  const apiKey = process.env.REACT_APP_GOOGLE_API_KEY;\n  const googleSpreadsheet = process.env.REACT_APP_GOOGLE_SPREADSHEET;\n  const clientEmail = process.env.REACT_APP_GOOGLE_CLIENT_EMAIL;\n  const privateKey = process.env.REACT_APP_GOOGLE_PRIVATE_KEY;\n\n  return {\n    spreadsheet: googleSpreadsheet ? googleSpreadsheet : \"\",\n    api_key: apiKey ? apiKey : \"\",\n    credentials: {\n      client_email: clientEmail ? clientEmail : \"\",\n      private_key: privateKey\n        ? privateKey.replaceAll(\"\\\\n\", \"\\\\\\n\").replaceAll(\"\\\\\", \"\")\n        : \"\",\n    },\n  };\n};\n\nexport default {\n  app: getApp(),\n  city: getCity(),\n  useGoogleMaps: useGoogleMaps(),\n  google: getGoogleApis(),\n};\n","import React from \"react\";\n\n// Configs\nimport config from \"../../config\";\n\nfunction Header() {\n  return (\n    <section\n      className=\"uk-section uk-section-small uk-section-primary\"\n      style={{ background: \"#305183\" }}\n    >\n      <div className=\"uk-container\">\n        <h2 className=\"uk-margin-remove uk-text-bold\">\n          Mapa de {config.city.name}\n        </h2>\n      </div>\n    </section>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <section\n      className=\"uk-section uk-section-small uk-section-primary\"\n      style={{ background: \"#305183\" }}\n    >\n      <div className=\"uk-container\">\n      </div>\n    </section>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\n// Components\nimport Header from \"../../../components/Header\";\nimport Footer from \"../../../components/Footer\";\n\ninterface LayoutProps {\n  children: React.ReactNode\n}\n\nconst Default: React.FC<LayoutProps> = ({ children }) => {\n  return (\n    <div className=\"uk-offcanvas-content\">\n      <div uk-height-viewport=\"expand: true\">\n        <Header />\n\n        {children}\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Default;\n","import React, { ButtonHTMLAttributes } from \"react\";\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  label: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({ label, type, ...rest }) => {\n  return (\n    <button\n      type={type}\n      className=\"uk-button uk-button-primary uk-button-large uk-width-expand\"\n      {...rest}\n      style={{\n        fontSize: \"20px\",\n        fontWeight: \"bold\",\n      }}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport { Button };\n","import React, { InputHTMLAttributes } from \"react\";\n\ninterface CheckboxProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  label: string;\n  checked: boolean;\n}\n\nconst Checkbox: React.FC<CheckboxProps> = ({\n  name,\n  label,\n  checked,\n  onChange,\n}) => {\n  return (\n    <label\n      style={{\n        display: \"block\",\n        verticalAlign: \"top\",\n        height: \"38px\",\n        lineHeight: \"38px\",\n        fontSize: \"20px\",\n        fontWeight: \"bold\",\n      }}\n    >\n      <input\n        id={name}\n        name={name}\n        className=\"uk-checkbox\"\n        type=\"checkbox\"\n        checked={checked}\n        onChange={onChange}\n        style={{\n          width: \"38px\",\n          height: \"38px\",\n          // margin: \"0 auto\",\n          verticalAlign: \"bottom\",\n        }}\n      />{\" \"}\n      {label}\n    </label>\n  );\n};\n\nexport { Checkbox };\n","import React from \"react\";\nimport ReactSelect, { Props, Theme } from \"react-select\";\n\nconst Select: React.FC<Props> = ({\n  name,\n  placeholder,\n  isMultiple,\n  value,\n  options,\n  onChange,\n}) => {\n  function customTheme(theme: Theme): Theme {\n    return {\n      ...theme,\n      colors: {\n        ...theme.colors,\n        primary25: \"#D3D3D3\",\n      },\n      borderRadius: 0,\n    };\n  }\n\n  return (\n    <div className=\"uk-form-controls\">\n      <ReactSelect\n        id={name}\n        name={name}\n        placeholder={placeholder}\n        isMulti={isMultiple}\n        value={value}\n        options={options}\n        onChange={onChange}\n        theme={customTheme}\n        // className=\"basic-multi-select\"\n        // classNamePrefix=\"select\"\n      />\n    </div>\n  );\n};\n\nexport { Select };\n","import React, { useState } from \"react\";\n\n// Props\nexport interface TableProps {\n  data: {\n    id: number;\n    name: string;\n    owner: string;\n    irrigated: boolean;\n    covered_planting: boolean;\n    vehicles: number;\n    commercialization: string[];\n    products: {\n      name: string;\n      year: number;\n      jan: number;\n      fev: number;\n      mar: number;\n      abr: number;\n      mai: number;\n      jun: number;\n      jul: number;\n      ago: number;\n      set: number;\n      out: number;\n      nov: number;\n      dez: number;\n      total: number;\n    }[];\n  };\n}\n\nconst Table: React.FC<TableProps> = ({ data }) => {\n  const [products] = useState(data.products);\n\n  return (\n    <div className=\"uk-card uk-card-default\" style={{ marginBottom: \"25px\" }}>\n      <div className=\"uk-card-header\">\n        <h3 className=\"uk-card-title\">\n          {data.id} - {data.name}\n        </h3>\n        <p>\n          <strong>Proprietário(a):</strong> {data.owner} /{\" \"}\n          <strong>Irrigado:</strong> {data.irrigated === true ? \"Sim\" : \"Não\"} /{\" \"}\n          <strong>Cultivo protegido:</strong>{\" \"}\n          {data.covered_planting === true ? \"Sim\" : \"Não\"} /{\" \"}\n          <strong>Veiculos:</strong> {data.vehicles} /{\" \"}\n          <strong>Comercialização:</strong> {data.commercialization ? data.commercialization.join(\", \") : \"\"}\n        </p>\n      </div>\n      <div className=\"uk-card-body\">\n        <div className=\"uk-overflow-auto\">\n          <table\n            className=\"uk-table uk-table-divider uk-table-small\"\n            id=\"datatable\"\n          >\n            <thead>\n              <tr>\n                <th>Produto</th>\n                <th>Ano</th>\n                <th>Jan</th>\n                <th>Fev</th>\n                <th>Mar</th>\n                <th>Abr</th>\n                <th>Mai</th>\n                <th>Jun</th>\n                <th>Jul</th>\n                <th>Ago</th>\n                <th>Set</th>\n                <th>Out</th>\n                <th>Nov</th>\n                <th>Dez</th>\n                <th>Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products &&\n                products.map((product, index) => (\n                  <tr key={index}>\n                    <td><strong>{product.name}</strong></td>\n                    <td>{product.year}</td>\n                    <td>{product.jan}</td>\n                    <td>{product.fev}</td>\n                    <td>{product.mar}</td>\n                    <td>{product.abr}</td>\n                    <td>{product.mai}</td>\n                    <td>{product.jun}</td>\n                    <td>{product.jul}</td>\n                    <td>{product.ago}</td>\n                    <td>{product.set}</td>\n                    <td>{product.out}</td>\n                    <td>{product.nov}</td>\n                    <td>{product.dez}</td>\n                    <td>{product.total}</td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Table };\n","import React, { useEffect, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker, Polygon } from \"@react-google-maps/api\";\n\n// Configs\nimport config from \"../../config\";\n\n// Components || Interfaces\nimport { Producer } from \"../../repositories/Producer\";\nimport { Highlighter } from \"../../repositories/Highlighter\";\n\ninterface Props {\n  producers: Producer[];\n  highlighters: Highlighter[];\n}\ninterface LatLng {\n  lat: number;\n  lng: number;\n}\n\nconst Map: React.FC<Props> = ({ producers, highlighters }) => {\n  const [coordinates] = useState(config.city.coordinate);\n  const [geoJSONOfTheMunicipality, setGeoJSONOfTheMunicipality] = useState({\n    type: \"Feature\",\n    properties: {\n      id: \"\",\n      name: \"\",\n      description: \"\",\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [[]],\n    },\n  });\n\n  useEffect(() => {\n    const loadGeoJSON = async () => {\n      const municipality = config.city.code;\n      await import(`../../data/geodata/${municipality}.json`).then((data) => {\n        setGeoJSONOfTheMunicipality(data.features[0]);\n      });\n    };\n\n    loadGeoJSON();\n  }, []);\n\n  const renderGeoJSONOfTheMunicipality = () => {\n    const coordinates = geoJSONOfTheMunicipality.geometry.coordinates[0];\n    let coordArr = Array<LatLng>();\n    coordinates.map((coordinate: any) =>\n      coordArr.push({ lat: coordinate[1], lng: coordinate[0] })\n    );\n    return (\n      <Polygon\n        path={coordArr}\n        options={{\n          strokeColor: \"#fc1e0d\",\n          strokeOpacity: 1,\n          strokeWeight: 2,\n        }}\n      />\n    );\n  };\n\n  const renderRegions = () => {};\n\n  return (\n    <LoadScript googleMapsApiKey={config.google.api_key}>\n      <GoogleMap\n        mapContainerStyle={{\n          width: \"100%\",\n          height: \"500px\",\n          opacity: \"0.9\",\n        }}\n        center={coordinates}\n        zoom={9}\n      >\n        {renderGeoJSONOfTheMunicipality()}\n        {renderRegions()}\n\n        {highlighters &&\n          highlighters.map((highlighter: Highlighter, key) => {\n            if (highlighter.lat !== null && highlighter !== null) {\n              return (\n                <Marker\n                  key={key}\n                  title={highlighter.name}\n                  onLoad={() => {}}\n                  position={{\n                    lat: highlighter.lat,\n                    lng: highlighter.lng,\n                  }}\n                />\n              );\n            }\n\n            return null;\n          })}\n\n        {producers &&\n          producers.map((producer: Producer, key) => {\n            if (producer.lat !== null && producer.lng !== null) {\n              return (\n                <Marker\n                  key={key}\n                  title={producer.name}\n                  onLoad={() => {}}\n                  position={{ lat: producer.lat, lng: producer.lng }}\n                />\n              );\n            }\n\n            return null;\n          })}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default React.memo(Map);\n","import React, { useEffect, useState } from \"react\";\n// import { Icon } from \"leaflet\";\nimport { Map, TileLayer, Marker, Popup, Tooltip, GeoJSON } from \"react-leaflet\";\n\n// Components || Interfaces\nimport { Producer } from \"../../repositories/Producer\";\nimport { Highlighter } from \"../../repositories/Highlighter\";\n\n// Configs\nimport config from \"../../config\";\n\n// Icons SVG\n// import bridge from \"../../assets/icons/bridge.svg\";\n// import gate from \"../../assets/icons/gate.svg\";\n// import services from \"../../assets/icons/services.svg\";\n// import dais from \"../../assets/icons/dais.svg\";\n// import silo from \"../../assets/icons/silo.svg\";\n// import waterTank from \"../../assets/icons/water-tank.svg\";\n// import fish from \"../../assets/icons/fish.svg\";\n// import vegetable from \"../../assets/icons/vegetable.svg\";\n\ninterface Props {\n  producers: Producer[];\n  highlighters: Highlighter[];\n}\n\nconst LeafletMaps: React.FC<Props> = ({ producers, highlighters }) => {\n  const [coordinates] = useState(config.city.coordinate);\n  const [geoJSONOfTheMunicipality, setGeoJSONOfTheMunicipality] = useState<\n    GeoJSON.FeatureCollection<any>\n  >({} as GeoJSON.FeatureCollection<any>);\n\n  // const icons = [\n  //   new Icon({ iconUrl: bridge, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: services, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: dais, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: gate, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: silo, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: waterTank, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: fish, iconSize: [40, 40] }),\n  //   new Icon({ iconUrl: vegetable, iconSize: [40, 40] }),\n  // ];\n\n  useEffect(() => {\n    const loadGeoJSON = async () => {\n      const municipality = config.city.code;\n      await import(`../../data/geodata/${municipality}.json`).then((data) => {\n        setGeoJSONOfTheMunicipality(\n          data.default as GeoJSON.FeatureCollection<any>\n        );\n      });\n    };\n\n    loadGeoJSON();\n  }, []);\n\n  const renderGeoJSONOfTheMunicipality = () => {\n    if (geoJSONOfTheMunicipality.features) {\n      return (\n        <GeoJSON\n          key=\"map\"\n          data={geoJSONOfTheMunicipality}\n          style={{\n            color: \"#fc1e0d\",\n            opacity: 1,\n            weight: 2,\n          }}\n        />\n      );\n    }\n    return null;\n  };\n\n  const renderRegions = () => {};\n\n  return (\n    <Map\n      center={[coordinates.lat, coordinates.lng]}\n      zoom={9}\n      style={{ width: \"100%\", height: \"500px\", opacity: \"0.9\" }}\n    >\n      <TileLayer\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n\n      {renderGeoJSONOfTheMunicipality()}\n      {renderRegions()}\n\n      {highlighters &&\n        highlighters.map((highlighter: Highlighter, key: number) => {\n          if (highlighter.lat !== null && highlighter !== null) {\n            return (\n              <Marker key={key} position={[highlighter.lat, highlighter.lng]}>\n                <Popup>\n                  <div>\n                    <h2>{highlighter.name}</h2>\n                    <p>{highlighter.description}</p>\n                  </div>\n                </Popup>\n                <Tooltip>{highlighter.type}</Tooltip>\n              </Marker>\n            );\n          }\n\n          return null;\n        })}\n\n      {producers &&\n        producers.map((producer: Producer, key: number) => {\n          if (producer.lat !== null && producer.lng !== null) {\n            return (\n              <Marker key={key} position={[producer.lat, producer.lng]}>\n                <Popup>{producer.name}</Popup>\n                <Tooltip>Propriedade: {producer.name}</Tooltip>\n              </Marker>\n            );\n          }\n\n          return null;\n        })}\n    </Map>\n  );\n};\n\nexport default LeafletMaps;\n","import { GoogleSpreadsheet } from \"google-spreadsheet\";\n\n// Configs\nimport config from \"../config\";\n\nconst doc = new GoogleSpreadsheet(config.google.spreadsheet);\n\ndoc.useServiceAccountAuth(config.google.credentials);\n\nexport { doc };\n","import { doc } from \"../../services/google.spreadsheets\";\n\n// Props\nexport interface Product {\n  producerId: number;\n  name: string;\n  year: number;\n  jan: number;\n  fev: number;\n  mar: number;\n  abr: number;\n  mai: number;\n  jun: number;\n  jul: number;\n  ago: number;\n  set: number;\n  out: number;\n  nov: number;\n  dez: number;\n  total: number;\n}\n\nconst getAll = async () => {\n  await doc.loadInfo(); // loads document properties and worksheets\n\n  const sheet = doc.sheetsByIndex[1];\n  const rows = await sheet.getRows();\n  const itens = rows.map(\n    ({\n      Produtor,\n      Produto,\n      Ano,\n      Janeiro,\n      Fevereiro,\n      Março,\n      Abril,\n      Maio,\n      Junho,\n      Julho,\n      Agosto,\n      Setembro,\n      Outubro,\n      Novembro,\n      Dezembro,\n      Total,\n    }) => {\n      return {\n        producerId: Number(Produtor),\n        name: Produto,\n        year: Number(Ano),\n        jan: parseFloat(Janeiro),\n        fev: parseFloat(Fevereiro),\n        mar: parseFloat(Março),\n        abr: parseFloat(Abril),\n        mai: parseFloat(Maio),\n        jun: parseFloat(Junho),\n        jul: parseFloat(Julho),\n        ago: parseFloat(Agosto),\n        set: parseFloat(Setembro),\n        out: parseFloat(Outubro),\n        nov: parseFloat(Novembro),\n        dez: parseFloat(Dezembro),\n        total: parseFloat(Total),\n      };\n    }\n  );\n\n  return itens;\n};\n\nconst getProductsByProducerId = (id: number) => {\n  let sessionProducts = JSON.parse(sessionStorage.getItem(\"products\") || \"\");\n  if (sessionProducts) {\n    const products = sessionProducts.filter(\n      (product: Product) => product.producerId === id ? product : null\n    );\n    return products;\n  }\n  return [];\n};\n\nexport default { getAll, getProductsByProducerId };\n","import { doc } from \"../../services/google.spreadsheets\";\nimport productRepository, { Product } from \"../Product\";\n\n// Props\nexport interface Producer {\n  id: number;\n  updated_at: string;\n  type: string;\n  name: string;\n  owner: string;\n  state_registration: string;\n  employees: number;\n  total_area: number;\n  vegetable_garden_area: number;\n  orchard_area: number;\n  irrigated: boolean;\n  covered_planting: boolean;\n  vehicles: number;\n  commercialization: string[];\n  lat: number;\n  lng: number;\n  products: Product[];\n}\n\nconst getAll = async () => {\n  await doc.loadInfo(); // loads document properties and worksheets\n\n  const sheet = doc.sheetsByIndex[0];\n  const rows = await sheet.getRows();\n  const itens = rows.map(\n    ({\n      ID,\n      DataAtualização,\n      Tipo,\n      Nome,\n      Proprietário,\n      InscriçãoEstadual,\n      Empregados,\n      AreaTotal,\n      AreaDeHorta,\n      AreaDePomar,\n      Irrigação,\n      CultivoProtegido,\n      Veiculos,\n      Comercialização,\n      Latitude,\n      Longitude,\n    }) => {\n      return {\n        id: Number(ID),\n        updated_at: DataAtualização,\n        type: Tipo,\n        name: Nome,\n        owner: Proprietário,\n        state_registration: InscriçãoEstadual,\n        employees: Empregados ? Number(Empregados) : 0,\n        total_area: AreaTotal ? Number(AreaTotal) : 0,\n        vegetable_garden_area: AreaDeHorta ? Number(AreaDeHorta) : 0,\n        orchard_area: AreaDePomar ? Number(AreaDePomar) : 0,\n        irrigated: Irrigação === \"1\" ? true : false,\n        covered_planting: CultivoProtegido === \"1\" ? true : false,\n        vehicles: Veiculos ? Number(Veiculos) : 0,\n        commercialization: Comercialização\n          ? Comercialização.replaceAll(\" \", \"\").split(\",\")\n          : \"\",\n        lat: Number(Latitude),\n        lng: Number(Longitude),\n        products: [],\n      };\n    }\n  );\n\n  const producers = itens.map((producer: Producer) => {\n    return {\n      ...producer,\n      products: productRepository.getProductsByProducerId(producer.id)\n    }\n  });\n\n  return producers;\n};\n\nexport default { getAll };\n","import { doc } from \"../../services/google.spreadsheets\";\n\n// Props\nexport interface Highlighter {\n  id: number;\n  type: string;\n  name: string;\n  lat: number;\n  lng: number;\n  description: string;\n  icon?: number;\n}\n\nconst getIcon = (type: string) => {\n  if (type === \"Ponte\") {\n    return 0;\n  } else if (type === \"Serviço\") {\n    return 1;\n  } else if (type === \"Mata-burro\") {\n    return 2;\n  } else if (type === \"Porteira\") {\n    return 3;\n  } else if (type === \"Silo\") {\n    return 4;\n  } else if (type === \"Tanque\") {\n    return 5;\n  } else if (type === \"Represa\") {\n    return 6;\n  } else if (type === \"Agroindústria\") {\n    return 7;\n  }\n};\n\nconst getAll = async () => {\n  await doc.loadInfo(); // loads document properties and worksheets\n  //   console.log(doc.title);\n\n  const sheet = doc.sheetsByIndex[2];\n  const rows = await sheet.getRows();\n  const itens = rows.map(\n    ({ ID, Tipo, Nome, Latitude, Longitude, Descrição }) => {\n      return {\n        id: ID,\n        type: Tipo,\n        name: Nome,\n        lat: parseFloat(Latitude),\n        lng: parseFloat(Longitude),\n        description: Descrição,\n        icon: getIcon(Tipo),\n      };\n    }\n  );\n\n  return itens;\n};\n\nexport default { getAll };\n","import React, {\n  ChangeEvent,\n  FormEvent,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\"\nimport { Link } from \"react-router-dom\";\nimport { ValueType, OptionTypeBase as OptionType } from \"react-select\";\n\n// Components\nimport { Select, Checkbox, Button, Table } from \"../Html\";\n// import Pagination from \"../Pagination\";\nimport GoogleMap from \"../Maps/GoogleMaps\";\nimport LeafletMap from \"../Maps/LeafletMaps\";\n\n// Configs\nimport config from \"../../config\";\n\n// Data\nimport data from \"../../data/data.json\";\n\n// Repositories\nimport producerRepository, { Producer } from \"../../repositories/Producer\";\nimport productRepository, { Product } from \"../../repositories/Product\";\nimport highlighterRepository, {\n  Highlighter,\n} from \"../../repositories/Highlighter\";\n\n// Props\ninterface Filter {\n  value: string;\n  label: string;\n}\n\nconst FormSearch: React.FC = () => {\n  // Filters States\n  const [structures, setStructures] = useState<Filter[]>([]);\n  const [livestocks, setLivestocks] = useState<Filter[]>([]);\n  const [productions, setProductions] = useState<Filter[]>([]);\n  const [commercializations, setCommercializations] = useState<Filter[]>([]);\n  const [coveredPlanting, setCoveredPlanting] = useState(false);\n  const [irrigated, setIrrigated] = useState(false);\n\n  // States\n  // const [products, setProducts] = useState<Product[]>([]);\n  const [producers, setProducers] = useState<Producer[]>([]);\n  const [highlighters, setHighlighters] = useState<Highlighter[]>([]);\n\n  // Session State\n  const [sessionProducers, setSessionProducers] = useState<Producer[]>([]);\n  const [sessionHighlighters, setSessionHighlighters] = useState<Highlighter[]>(\n    []\n  );\n\n  // Pagination State\n  // const [itemsOnPage, setItemsOnPage] = useState(4);\n  // const [pagination, setPagination] = useState({start: 0, end: itemsOnPage});\n\n  // Load Data From Google Spreadsheets\n  useEffect(() => {\n    const loadDataSpreadsheetsFromGoogle = async () => {\n      const products = sessionStorage.getItem(\"products\");\n      if (!products) {\n        productRepository\n          .getAll()\n          .then((response) => {\n            sessionStorage.setItem(\"products\", JSON.stringify(response));\n          })\n          .catch((error) => {\n            console.error(error);\n          })\n          .finally(() => {\n            console.log(\"Produtos\");\n          });\n      }\n\n      const producers = sessionStorage.getItem(\"producers\");\n      if (!producers) {\n        producerRepository\n          .getAll()\n          .then(async (response) => {\n            setSessionProducers(response);\n            sessionStorage.setItem(\"producers\", JSON.stringify(response));\n          })\n          .catch((error) => {\n            console.error(error);\n          })\n          .finally(() => {\n            console.log(\"Produtores\");\n          });\n      } else {\n        setSessionProducers(JSON.parse(producers));\n      }\n\n      const highlighters = sessionStorage.getItem(\"highlighters\");\n      if (!highlighters) {\n        highlighterRepository\n          .getAll()\n          .then((response) => {\n            setSessionHighlighters(response);\n            sessionStorage.setItem(\"highlighters\", JSON.stringify(response));\n          })\n          .catch((error) => {\n            console.error(error);\n          })\n          .finally(() => {\n            console.log(\"Marcadores\");\n          });\n      } else {\n        setSessionHighlighters(JSON.parse(highlighters));\n      }\n    };\n\n    loadDataSpreadsheetsFromGoogle();\n  }, []);\n  // ./Load Data From Google Spreadsheets\n\n  // Filters\n  const filterHighlighters = useCallback(() => {\n    let filterStructures: any[] = [];\n    if (structures && structures.length > 0) {\n      filterStructures = structures.map((item) => item.value);\n      // console.log(filterStructures);\n    }\n\n    let highlightersWithStructureFilter = sessionHighlighters.filter(\n      (highlighter: Highlighter) => {\n        return filterStructures.includes(highlighter.type) === true\n          ? highlighter\n          : null;\n      }\n    );\n\n    return highlightersWithStructureFilter;\n  }, [sessionHighlighters, structures]);\n\n  const filterProducers = useCallback(() => {\n    let producers: Producer[] = [];\n\n    if (structures && structures.length > 0) {\n      let filterStructures: any[] = [];\n      filterStructures = structures.map((item) => item.value);\n      // console.log(filterStructures);\n\n      if (filterStructures.includes(\"Propriedade\")) {\n        producers = sessionProducers;\n      }\n    }\n\n    if (\n      (livestocks && livestocks.length > 0) ||\n      (productions && productions.length > 0)\n    ) {\n      let filterLivestocksAndProductions: any[] = [];\n      livestocks.map((item) => filterLivestocksAndProductions.push(item.value));\n      productions.map((item) =>\n        filterLivestocksAndProductions.push(item.value)\n      );\n      // console.log(filterLivestocksAndProductions);\n\n      if (filterLivestocksAndProductions.length > 0) {\n        let producersLivestocksAndProductions = producers\n          .map((producer: Producer) => {\n            let newProducts = producer.products.filter(\n              (product: Product) =>\n                filterLivestocksAndProductions.includes(product.name) === true\n            );\n            return { ...producer, products: newProducts };\n          })\n          .filter((producer: Producer) => producer.products.length > 0);\n\n        producers = producersLivestocksAndProductions;\n      }\n    }\n\n    if (commercializations && commercializations.length > 0) {\n      let filterCommercializations: any[] = [];\n      filterCommercializations = commercializations.map((item) => item.value);\n      //   console.log(filterCommercializations);\n\n      let producersCommercializations = producers.filter(\n        (producer: Producer) => {\n          return filterCommercializations.map((item) => {\n            return producer.commercialization.includes(item) === true\n              ? producer\n              : null;\n          });\n        }\n      );\n\n      producers = producersCommercializations;\n    }\n\n    if (irrigated || coveredPlanting) {\n      let producersIrrigatedOrCovered = producers.filter(\n        (producer: Producer) => {\n          return (\n            producer.irrigated === irrigated &&\n            producer.covered_planting === coveredPlanting\n          );\n        }\n      );\n\n      producers = producersIrrigatedOrCovered;\n    }\n\n    return producers;\n  }, [\n    commercializations,\n    coveredPlanting,\n    irrigated,\n    livestocks,\n    productions,\n    sessionProducers,\n    structures,\n  ]);\n  // ./Filters\n\n  // Clear Search Form\n  const handleClearSearchForm = useCallback(() => {\n    setStructures([]);\n    setLivestocks([]);\n    setProductions([]);\n    setCommercializations([]);\n    setCoveredPlanting(false);\n    setIrrigated(false);\n\n    setHighlighters([]);\n    setProducers([]);\n  }, []);\n  // ./Clear Search Form\n\n  // Submit Search Form\n  const handleSubmitSearchForm = useCallback(() => {\n    if (\n      structures.length === 0 &&\n      livestocks.length === 0 &&\n      commercializations.length === 0 &&\n      productions.length === 0 &&\n      coveredPlanting === false &&\n      irrigated === false\n    ) {\n      setHighlighters(sessionHighlighters);\n      setProducers(sessionProducers);\n    } else {\n      setHighlighters(filterHighlighters());\n      setProducers(filterProducers());\n    }\n  }, [\n    commercializations.length,\n    coveredPlanting,\n    filterHighlighters,\n    filterProducers,\n    irrigated,\n    livestocks.length,\n    productions.length,\n    sessionHighlighters,\n    sessionProducers,\n    structures.length,\n  ]);\n  // ./Submit Search Form\n\n  return (\n    <>\n      <form\n        onSubmit={(event: FormEvent) => {\n          event.preventDefault();\n          handleSubmitSearchForm();\n        }}\n      >\n        <fieldset className=\"uk-fieldset\">\n          <legend className=\"uk-legend\">\n            <strong>Selecione o que você procura:</strong>\n          </legend>\n\n          <div\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid uk-grid-stack\"\n            uk-grid=\"\"\n          >\n            <div className=\"uk-width-expand uk-first-column\">\n              <Select\n                name=\"structures\"\n                placeholder=\"Selecione a estrutura geográfica...\"\n                isMultiple={true}\n                value={structures}\n                options={data.geographic_structure}\n                onChange={(selectedOption: ValueType<OptionType>) => {\n                  setStructures(\n                    selectedOption?.map((selected: OptionType) => selected)\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <div\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid\"\n            uk-grid=\"\"\n          >\n            <div className=\"uk-width-expand uk-first-column\">\n              <Select\n                name=\"livestocks\"\n                placeholder=\"Selecione a pecuária...\"\n                isMultiple={true}\n                value={livestocks}\n                options={data.livestock}\n                onChange={(selectedOption: ValueType<OptionType>) => {\n                  setLivestocks(\n                    selectedOption?.map((selected: OptionType) => selected)\n                  );\n                }}\n              />\n            </div>\n            <div className=\"uk-width-expand\">\n              <div id=\"filter_producao\">\n                <Select\n                  name=\"productions\"\n                  placeholder=\"Selecione os gêneros alimentícios...\"\n                  isMultiple={true}\n                  value={productions}\n                  options={data.production}\n                  onChange={(selectedOption: ValueType<OptionType>) => {\n                    setProductions(\n                      selectedOption?.map((selected: OptionType) => selected)\n                    );\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"uk-child-width-expand@s uk-child-width-1-3@m uk-margin uk-grid-small uk-grid\"\n            uk-grid=\"\"\n          >\n            <div className=\"uk-width-1-2@s uk-first-column\">\n              <Select\n                name=\"commercializations\"\n                placeholder=\"Selecione os canais de comercialização...\"\n                isMultiple={true}\n                value={commercializations}\n                options={data.commercialization}\n                onChange={(selectedOption: ValueType<OptionType>) => {\n                  setCommercializations(\n                    selectedOption?.map((selected: OptionType) => selected)\n                  );\n                }}\n              />\n            </div>\n            <div className=\"uk-width-1-2@s uk-grid-margin uk-first-column\">\n              <div className=\"uk-child-width-expand uk-grid\" uk-grid=\"\">\n                <div className=\"uk-first-column\">\n                  <Checkbox\n                    name=\"coveredPlanting\"\n                    label=\"Plantio coberto\"\n                    checked={coveredPlanting}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      setCoveredPlanting(event.target.checked);\n                    }}\n                  />\n                </div>\n                <div>\n                  <Checkbox\n                    name=\"irrigated\"\n                    label=\"Irrigação\"\n                    checked={irrigated}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      setIrrigated(event.target.checked);\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-expand uk-grid-margin uk-first-column\">\n              <Button type=\"submit\" label=\"Filtrar\" />\n            </div>\n            <div className=\"uk-width-auto uk-grid-margin\">\n              <Link\n                to=\"#\"\n                className=\"uk-button uk-button-default uk-button-large uk-icon-link uk-icon\"\n                uk-icon=\"icon: close; ratio: 2\"\n                onClick={handleClearSearchForm}\n              />\n            </div>\n          </div>\n        </fieldset>\n      </form>\n\n      {config.useGoogleMaps === true ? (\n        <div className=\"uk-container\">\n          <GoogleMap producers={producers} highlighters={highlighters} />\n        </div>\n      ) : (\n        <div className=\"uk-container\">\n          <LeafletMap producers={producers} highlighters={highlighters} />\n        </div>\n      )}\n\n      {producers && producers.length > 0 && (\n        <>\n          <hr />\n          <div className=\"uk-container\">\n            {producers\n              // .slice(pagination.start, pagination.end)\n              .map((producer, index) => (\n                <Table key={index} data={producer} />\n              ))}\n          </div>\n        </>\n      )}\n\n      {/* {producers && producers.length > 0 && (\n        <Pagination\n          itemsOnPage={itemsOnPage}\n          onPaginationChange={(start: number, end: number) => {\n            setPagination({ start: start, end: end });\n          }}\n          total={producers.length}\n          alignment=\"right\"\n        />\n      )} */}\n    </>\n  );\n};\n\nexport default FormSearch;\n","import React from \"react\";\n\n// Layout\nimport Layout from \"../Layouts/Default\";\n\n// Components\nimport FormSearch from \"../../components/FormSearch\";\n\nfunction Home() {\n  return (\n    <Layout>\n      <section className=\"uk-section uk-section-small\">\n        <div className=\"uk-container\">\n          <FormSearch />\n        </div>\n      </section>\n    </Layout>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\n\nfunction Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/valorize-sua-cidade\" component={Home} exact />\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Routes\nimport Routes from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}